USE [master]
GO
/****** Object:  Database [youxiuser]    Script Date: 4/23/2024 9:35:59 PM ******/
CREATE DATABASE [youxiuser] ON  PRIMARY 
( NAME = N'youxiuser', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\youxiuser.MDF' , SIZE = 3072KB , MAXSIZE = UNLIMITED, FILEGROWTH = 1024KB )
 LOG ON 
( NAME = N'youxiuser_log', FILENAME = N'C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\youxiuser.LDF' , SIZE = 427392KB , MAXSIZE = 2048GB , FILEGROWTH = 10%)
GO
ALTER DATABASE [youxiuser] SET COMPATIBILITY_LEVEL = 90
GO
IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))
begin
EXEC [youxiuser].[dbo].[sp_fulltext_database] @action = 'disable'
end
GO
ALTER DATABASE [youxiuser] SET ANSI_NULL_DEFAULT OFF 
GO
ALTER DATABASE [youxiuser] SET ANSI_NULLS OFF 
GO
ALTER DATABASE [youxiuser] SET ANSI_PADDING OFF 
GO
ALTER DATABASE [youxiuser] SET ANSI_WARNINGS OFF 
GO
ALTER DATABASE [youxiuser] SET ARITHABORT OFF 
GO
ALTER DATABASE [youxiuser] SET AUTO_CLOSE OFF 
GO
ALTER DATABASE [youxiuser] SET AUTO_CREATE_STATISTICS ON 
GO
ALTER DATABASE [youxiuser] SET AUTO_SHRINK OFF 
GO
ALTER DATABASE [youxiuser] SET AUTO_UPDATE_STATISTICS ON 
GO
ALTER DATABASE [youxiuser] SET CURSOR_CLOSE_ON_COMMIT OFF 
GO
ALTER DATABASE [youxiuser] SET CURSOR_DEFAULT  GLOBAL 
GO
ALTER DATABASE [youxiuser] SET CONCAT_NULL_YIELDS_NULL OFF 
GO
ALTER DATABASE [youxiuser] SET NUMERIC_ROUNDABORT OFF 
GO
ALTER DATABASE [youxiuser] SET QUOTED_IDENTIFIER OFF 
GO
ALTER DATABASE [youxiuser] SET RECURSIVE_TRIGGERS OFF 
GO
ALTER DATABASE [youxiuser] SET  DISABLE_BROKER 
GO
ALTER DATABASE [youxiuser] SET AUTO_UPDATE_STATISTICS_ASYNC OFF 
GO
ALTER DATABASE [youxiuser] SET DATE_CORRELATION_OPTIMIZATION OFF 
GO
ALTER DATABASE [youxiuser] SET TRUSTWORTHY OFF 
GO
ALTER DATABASE [youxiuser] SET ALLOW_SNAPSHOT_ISOLATION OFF 
GO
ALTER DATABASE [youxiuser] SET PARAMETERIZATION SIMPLE 
GO
ALTER DATABASE [youxiuser] SET READ_COMMITTED_SNAPSHOT OFF 
GO
ALTER DATABASE [youxiuser] SET HONOR_BROKER_PRIORITY OFF 
GO
ALTER DATABASE [youxiuser] SET RECOVERY FULL 
GO
ALTER DATABASE [youxiuser] SET  MULTI_USER 
GO
ALTER DATABASE [youxiuser] SET PAGE_VERIFY CHECKSUM  
GO
ALTER DATABASE [youxiuser] SET DB_CHAINING OFF 
GO
USE [youxiuser]
GO
/****** Object:  User [RISEBETA]    Script Date: 4/23/2024 9:36:00 PM ******/
CREATE USER [RISEBETA] WITHOUT LOGIN WITH DEFAULT_SCHEMA=[dbo]
GO
/****** Object:  StoredProcedure [dbo].[AddEventPremiumTime]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO


CREATE PROC [dbo].[AddEventPremiumTime] @UID int, @type int, @day int
AS
SET NOCOUNT ON

DECLARE @rtn		SMALLINT

exec SetPremiumTime @UID,@type, @day, @rtn

RETURN @rtn

GO
/****** Object:  StoredProcedure [dbo].[CheckPremiumTime]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE  PROCEDURE [dbo].[CheckPremiumTime]
	@uid	INT
,	@type	INT
,	@rtn	SMALLINT	OUTPUT
AS

/*
	output: 1 - ?? ??, -1 - ?? ??, -2 - ? ? ?? ??
	sample: EXEC CheckPremiumTime 1234567, 1, @rtn OUTPUT
*/

SET NOCOUNT ON

DECLARE @premiumtime DATETIME
DECLARE @userType INT

SELECT TOP 1 @userType = type, @premiumtime = premiumtime FROM youxiuser.dbo.UserPremiumTime WITH(READUNCOMMITTED) WHERE uid = @uid

IF @@ROWCOUNT = 0
BEGIN
	-- ??? ??? ?? ?? ??. ?? ??
	SET @rtn = 1
	SELECT @rtn
	RETURN @rtn
END

IF @type = 100	-- ???? ??? ??? ???? ??.
BEGIN
	SET @rtn = 1
	SELECT @rtn
	RETURN @rtn
END

IF @userType = @type
	-- ??? ??? ?? ???, ?? ?? ??? ??. ?? ??
	SET @rtn = 1
ELSE
BEGIN
	-- ??? ??? ?? ??? ?? ?? ??? ??.
	IF DATEDIFF(n, @premiumtime, getdate()) > 0
		-- premiumtime ??? ???? ??? ??? ??. ?? ??.
		SET @rtn = 1
	ELSE
		-- ? ?? ???? ?? ??
		SET @rtn = -1
END

IF @@ERROR < > 0
BEGIN
	-- ? ? ?? ??? ??
	SET @rtn = -2
END

SELECT @rtn
RETURN @rtn

GO
/****** Object:  StoredProcedure [dbo].[SetPremiumTime]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO



CREATE      PROCEDURE [dbo].[SetPremiumTime]
	@uid	INT
,	@type	INT
,	@day	INT
,	@rtn	SMALLINT	OUTPUT
AS

SET NOCOUNT ON

DECLARE @premiumtime	DATETIME
DECLARE @newtime	DATETIME
DECLARE @resulttime	DATETIME
DECLARE @time		INT

SET @newtime = GETDATE()

-- ?? ??? premiumtime ?? ??
SELECT @premiumtime = premiumtime FROM youxiuser.dbo.UserPremiumTime WITH(READUNCOMMITTED) WHERE uid = @uid

IF @@ROWCOUNT = 0
BEGIN
	-- ?? ?? ??
	INSERT youxiuser.dbo.UserPremiumTime (uid, type, premiumtime, cumtime) VALUES (@uid, @type, DATEADD(d, @day, @newtime), 0)
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1
		SET @rtn = -1
	ELSE
		SET @rtn = 1

	-- ???? ??? ??? ??? ????.
	INSERT youxiuser.dbo.UserPremiumTimeLog (uid, [input]) VALUES (@uid, @newtime)

END
ELSE
BEGIN
	DECLARE @checkrtn SMALLINT
	-- ?? ??? ??? ??? ???? ?? ??
	EXEC youxiuser.dbo.CheckPremiumTime @uid, @type, @checkrtn OUTPUT
	IF @checkrtn <> 1
	BEGIN
		SET @rtn = -3
		SELECT @rtn
		RETURN @rtn
	END

	-- ?? ??? premiumtime ??
	SET @time = DATEDIFF(n, @newtime, @premiumtime)

	-- premiumtime? ?? ???? ?? ?? premiumtime ?? ???? ??
	IF @time <= 0
		SET @premiumtime = @newtime

	-- premiumtime? day? ?? ?? time? ????.
	SET @resulttime = DATEADD(d, @day, @premiumtime)

	UPDATE UserPremiumTime SET premiumtime = @resulttime, type = @type WHERE uid = @uid
	IF @@ERROR <> 0 OR @@ROWCOUNT <> 1
		SET @rtn = -2
	ELSE
		SET @rtn = 1
END
SELECT @rtn
RETURN @rtn

GO
/****** Object:  StoredProcedure [dbo].[sp_SearchUserAccount]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[sp_SearchUserAccount]
	@UID int,
	@account varchar(20)
AS
set nocount on

if @UID is not null
begin
	select uid,account from youxiuser.dbo.usertbl where uid=@uid
end
else
begin
	select uid,account from youxiuser.dbo.usertbl where account=@account
end


GO
/****** Object:  StoredProcedure [dbo].[spActivateTrialID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[spActivateTrialID]
	@id VARCHAR(20)
AS
declare @TrialDays tinyint
select @TrialDays = Trialdays from dbo.TrialAccount where trialID = @id and activate = 0 and validid = 1
if @TrialDays is not null 
begin
	update dbo.TrialAccount set activate = 1, dateActivate = getdate() where trialID = @id
	insert into pay_gamemyth.dbo.paytbl(account, points, endtime) values(@id, 0, getdate()+@TrialDays)
end


GO
/****** Object:  StoredProcedure [dbo].[spChargeMonth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** ??: ?? ???? dbo.spChargeMonth    ???? ??: 2002-03-19 ?? 5:30:44 ******/
CREATE PROC [dbo].[spChargeMonth]
	@ACCOUNT varchar(10),
	@UID int,
	@POINT int,
	@KIND int,
	@CHECKDAY int
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @COUNT int
SELECT @COUNT = COUNT(*) FROM USERTBL WHERE ACCOUNT = @ACCOUNT AND UID = @UID
IF @COUNT = 0
BEGIN
	-- ??? ???? ?? ???
	SELECT 1 AS ERRCODE
	RETURN 
END
ELSE
BEGIN
	-- ??? ??? ?? ??
	DECLARE @INDEX int
	DECLARE @RPOINT int
	SELECT @RPOINT = POINT FROM CARDTBL WHERE UID = @UID AND KIND < 20
	IF @RPOINT < @POINT
	BEGIN
		-- ???? ??? ???
		SELECT 2 AS ERRCODE,'NOT ENOUGHT POINT' AS COMMENT
		RETURN
	END
	ELSE
	BEGIN
		-- ???? ??? ???
		UPDATE CARDTBL SET POINT = POINT - @POINT WHERE UID = @UID AND KIND < 20
		DECLARE @SDAY int
		DECLARE @EDAY int
		SELECT @SDAY = STARTDAY,@EDAY = ENDDAY FROM CARDTBL WHERE UID = @UID AND KIND = @KIND
		IF @SDAY IS NULL
		BEGIN
			-- ??? ???? ?? ???
			SELECT 3 AS ERRCODE,'CREATE SERIALNUMBER' AS COMMENT,@RPOINT - @POINT AS RPOINT
			RETURN
		END
		ELSE
		BEGIN
			-- ?? ???? ?? ?? ???
			DECLARE @SEL int
			DECLARE @REGIDATE int
			SET @REGIDATE = dbo.fnMakeType(GETDATE())	
			SET @SEL = dbo.fnCheckDate(@SDAY,@EDAY,GETDATE())
			IF @SEL = 1
			BEGIN
				-- ?? ????? ?? ???
				DECLARE @PLUSDAY smalldatetime
				DECLARE @ADDTIME int
				SET @PLUSDAY = STR(@EDAY)
				SET @ADDTIME = dbo.fnMakeType(@PLUSDAY+@CHECKDAY)
				UPDATE CARDTBL SET ENDDAY = @ADDTIME WHERE UID = @UID AND KIND = @KIND
				INSERT INTO REGIMONTH (REGIDATE,GAMETYPE,USEPOINT,USEDAY,REGITYPE) VALUES (@REGIDATE,@KIND,@POINT,@CHECKDAY,1)
				SELECT 4 AS ERRCODE,@ADDTIME AS ADDTIME,'ADD 30' AS COMMENT,@SDAY AS SDAY,@EDAY AS EDAY,@RPOINT - @POINT AS RPOINT
				RETURN
			END
			ELSE
			BEGIN
				IF @SEL = 3
				BEGIN
					-- ????? ?? ?? ???
					DECLARE @STARTDAY int
					DECLARE @ENDDAY int
					DECLARE @CURTIME smalldatetime
					SET @CURTIME = GETDATE()
					SET @STARTDAY = dbo.fnMakeType(@CURTIME)
					SET @ENDDAY = dbo.fnMakeType(@CURTIME+@CHECKDAY)
					UPDATE CARDTBL SET STARTDAY = @STARTDAY,ENDDAY = @ENDDAY WHERE UID = @UID AND KIND = @KIND
					INSERT INTO REGIMONTH (REGIDATE,GAMETYPE,USEPOINT,USEDAY,REGITYPE) VALUES (@REGIDATE,@KIND,@POINT,@CHECKDAY,0)
					SELECT 5 AS ERRCODE,@STARTDAY AS STARTDAY,@ENDDAY AS ENDDAY,'REGIST NOW' AS COMMNET,@RPOINT-@POINT AS RPOINT
					RETURN
				END
				ELSE
				BEGIN
					-- ?? ?? ??
					SELECT 99 AS ERRCODE,'UNKNOWN ERROR' AS COMMENT
					RETURN
				END
			END
		END
	END
END
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spCheckAuth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spCheckAuth]
	@ID varchar(20),
	@PASSWD varchar(30),
	@KIND int,	-- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
	@TYPE int = 5	-- ????, 1:???, 2:??, 5:???
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @QTY int
DECLARE @START smalldatetime
DECLARE @END smalldatetime
DECLARE @NOW smalldatetime
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID AND passwd = @PASSWD
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 2 AS type, N'??? ??? ???? ??? ??? ??' AS comment
	RETURN 1 -- ??? ??? ???? ??? ??? ??
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 2 AS type, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
IF @TYPE = 5
BEGIN
-- ??? ?? ?????? ????.
DECLARE @POINT int
DECLARE @NEWKIND int
SELECT @NEWKIND = @KIND + 30;
SELECT @POINT = Point FROM cardtbl WHERE uid = @UID AND Kind = @NEWKIND AND Kind > 50
IF @Point IS NULL
BEGIN
	--SELECT 51 AS errcode, 5 AS type, N'??? ?? ???? ??' AS comment
	--RETURN 51 -- ??? ?? ???? ??
	EXEC spCheckAuth @ID, @PASSWD, @KIND, 2
	RETURN
	
END
ELSE
BEGIN
	-- ??? ?? ???
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spCheckServiceProc @UID, @QTY, @KIND 
	RETURN 
END
END -- ??? ??? ?? ?
-------------------------------------------------------------------------
-- ?? ??? ??
-------------------------------------------------------------------------
ELSE IF @TYPE = 2
BEGIN
-- ???? ?????? ???? ???? ????? ???
SELECT @START = STR(StartDay), @END = STR(EndDay) FROM cardtbl WHERE uid = @UID AND Kind = @KIND AND Kind >= 21 AND Kind <= 50
SELECT @NOW = GETDATE()
IF (@START IS NULL) OR (@END IS NULL)
BEGIN
	-- ???? ???? ??, ??? ???? ??
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spCheckProc @UID, @QTY, @KIND
	RETURN 
END
ELSE IF @START > @NOW
BEGIN
	SELECT 21 AS errcode, 2 AS type, N'?? ????? ???? ??' AS comment
	RETURN 21 -- ?? ????? ???? ??
END
ELSE IF @NOW > @END+1
BEGIN
	-- ?? ?? ?? ?? ??
	DELETE cardtbl WHERE uid = @UID AND Kind = @KIND AND Kind >= 21 AND Kind <= 50
	-- ?? ???? ??
	INSERT INTO logtbl (uid, account, logtime, logtype, qty)
		VALUES (@UID, @ID, GETDATE(), @KIND+500, 0)
	SELECT 22 AS errcode, 2 AS type, N'?? ???? ??' AS comment
	RETURN 22 -- ?? ???? ??
END
ELSE IF @START <= @NOW AND @NOW <= @END+1
BEGIN
	-- ?? ???? ??
	INSERT INTO logtbl (uid, account, logtime, logtype, qty)
		VALUES (@UID, @ID, GETDATE(), @KIND, 0)
	-- ?? ?? ??? ??
	SELECT 0 AS errcode, 2 AS type, @END+1 AS comment
	RETURN 0
END
ELSE
BEGIN
	SELECT 29 AS errcode, 2 AS type, N'?? ?? ??' AS comment
	RETURN 29 -- ?? ?? ??
END
END -- ?? ??? ?? ?
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
ELSE IF @TYPE = 1
BEGIN
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 1 AS type, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spCheckProc @UID, @QTY, @KIND
	RETURN 
END -- ??? ??? ?? ?
ELSE
BEGIN
	SELECT 9 AS errcode, 2 AS type, N'??? ?? ??' AS comment
	RETURN 9 -- ??? ?? ??
END
SELECT 99 AS errcode, 2 AS type, N'?? ?? ??' AS comment
RETURN 99 -- ?? ?? ??



GO
/****** Object:  StoredProcedure [dbo].[spCheckAuthUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spCheckAuthUID]
	@ID varchar(20),
	@PASSWD varchar(30),
	@KIND int,	-- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
	@TYPE int = 5	-- ????, 1:???, 2:??, 5:???
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @QTY int
DECLARE @START smalldatetime
DECLARE @END smalldatetime
DECLARE @NOW smalldatetime
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID AND passwd = @PASSWD
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 2 AS type, @UID AS uid, N'??? ??? ???? ??? ??? ??' AS comment
	RETURN 1 -- ??? ??? ???? ??? ??? ??
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 2 AS type, @UID AS uid, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
IF @TYPE = 5
BEGIN
-- ??? ?? ?????? ????.
DECLARE @POINT int
DECLARE @NEWKIND int
SELECT @NEWKIND = @KIND + 30;
SELECT @POINT = Point FROM cardtbl WHERE uid = @UID AND Kind = @NEWKIND AND Kind > 50
IF @Point IS NULL
BEGIN
	--SELECT 51 AS errcode, 5 AS type, N'??? ?? ???? ??' AS comment
	--RETURN 51 -- ??? ?? ???? ??
	EXEC spCheckAuthUID @ID, @PASSWD, @KIND, 2
	RETURN
	
END
ELSE
BEGIN
	-- ??? ?? ???
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, @UID AS uid, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spCheckServiceProcUID @UID, @QTY, @KIND 
	RETURN 
END
END -- ??? ??? ?? ?
-------------------------------------------------------------------------
-- ?? ??? ??
-------------------------------------------------------------------------
ELSE IF @TYPE = 2
BEGIN
-- ???? ?????? ???? ???? ????? ???
SELECT @START = STR(StartDay), @END = STR(EndDay) FROM cardtbl WHERE uid = @UID AND Kind = @KIND AND Kind >= 21 AND Kind <= 50
SELECT @NOW = GETDATE()
IF (@START IS NULL) OR (@END IS NULL)
BEGIN
	-- ???? ???? ??, ??? ???? ??
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, @UID AS uid, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spCheckProcUID @UID, @QTY, @KIND
	RETURN 
END
ELSE IF @START > @NOW
BEGIN
	SELECT 21 AS errcode, 2 AS type, @UID AS uid, N'?? ????? ???? ??' AS comment
	RETURN 21 -- ?? ????? ???? ??
END
ELSE IF @NOW > @END+1
BEGIN
	-- ?? ?? ?? ?? ??
	DELETE cardtbl WHERE uid = @UID AND Kind = @KIND AND Kind >= 21 AND Kind <= 50
	-- ?? ???? ??
	INSERT INTO logtbl (uid, account, logtime, logtype, qty)
		VALUES (@UID, @ID, GETDATE(), @KIND+500, 0)
	SELECT 22 AS errcode, 2 AS type, @UID AS uid, N'?? ???? ??' AS comment
	RETURN 22 -- ?? ???? ??
END
ELSE IF @START <= @NOW AND @NOW <= @END+1
BEGIN
	-- ?? ???? ??
	INSERT INTO logtbl (uid, account, logtime, logtype, qty)
		VALUES (@UID, @ID, GETDATE(), @KIND, 0)
	-- ?? ?? ??? ??
	SELECT 0 AS errcode, 2 AS type, @UID AS uid, @END+1 AS comment
	RETURN 0
END
ELSE
BEGIN
	SELECT 29 AS errcode, 2 AS type, @UID AS uid, N'?? ?? ??' AS comment
	RETURN 29 -- ?? ?? ??
END
END -- ?? ??? ?? ?
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
ELSE IF @TYPE = 1
BEGIN
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 1 AS type, @UID AS uid, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spCheckProcUID @UID, @QTY, @KIND
	RETURN 
END -- ??? ??? ?? ?
ELSE
BEGIN
	SELECT 9 AS errcode, 2 AS type, @UID AS uid, N'??? ?? ??' AS comment
	RETURN 9 -- ??? ?? ??
END
SELECT 99 AS errcode, 2 AS type, @UID AS uid, N'?? ?? ??' AS comment
RETURN 99 -- ?? ?? ??



GO
/****** Object:  StoredProcedure [dbo].[spCheckProc]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spCheckProc]
	@UID int, -- ??? UID
	@QTY int,  -- ??? ????
	@KIND int = 1 -- ?? ??? ??
AS
SET NOCOUNT ON
-- ?? ??? ??? ??? ??
DECLARE @ID varchar(20)
SELECT @ID = account FROM usertbl WHERE uid = @UID
DECLARE @LOGKIND int
SELECT @LOGKIND = @KIND + 100;
DECLARE @POINT int
DECLARE @START int
DECLARE @END int
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
BEGIN TRANSACTION
-------------------------------------------------------------------------
-- ??? ?? ??: 
-- ????? ????? ???? ????? ??? ???? ??????? ??
-------------------------------------------------------------------------
SELECT @POINT = Point, @START = StartDay, @END = EndDay FROM cardtbl WHERE (uid = @UID) AND (Kind BETWEEN 1 AND 10)
IF @Point IS NULL
BEGIN
	SELECT 11 AS errcode, 1 AS type, N'??? ?? ???? ??' AS comment
	ROLLBACK TRANSACTION
	RETURN 11 -- ??? ?? ???? ??
END
ELSE IF @POINT <= 0
BEGIN
	SELECT 12 AS errcode, 1 AS type, N'?? ???? ??? ?????' AS comment
	ROLLBACK TRANSACTION
	RETURN 12 -- ?? ??? ??? ?????
END
ELSE IF @POINT > 0 AND @START = 0 AND @END = 0
BEGIN
	-- ?? ??? ??
	IF @POINT >= @QTY
	BEGIN
		-- ?? ???? ??
		--INSERT INTO logtbl (uid, account, logtime, logtype, qty)
		--	VALUES (@UID, @ID, GETDATE(), @LOGKIND, @QTY)
		-- ??? ??
		--UPDATE cardtbl
		--SET Point = @Point - @QTY WHERE uid = @UID AND (Kind BETWEEN 1 AND 10)
		SELECT 0 AS errcode, 1 AS type, @QTY AS comment
		COMMIT TRANSACTION
		RETURN 0 -- ????
	END
	ELSE
	BEGIN
		SELECT 13 AS errcode, 1 AS type, N'?? ??? ??' AS comment
		ROLLBACK TRANSACTION
		RETURN 13 -- ?? ??? ??
	END
END
ELSE IF @POINT > 0 AND @START > 0 AND @END > 0
BEGIN
	-- ???? ?? ??? ??
	DECLARE @STARTDATE smalldatetime
	DECLARE @ENDDATE smalldatetime
	DECLARE @NOW smalldatetime
	SELECT @STARTDATE = STR(@START)
	SELECT @ENDDATE = STR(@END)
	SELECT @NOW = GETDATE()
	IF @STARTDATE <= @NOW AND @NOW <= @ENDDATE + 1
	BEGIN
		-- ????
		IF @POINT >= @QTY
		BEGIN
			-- ?? ???? ??
			--INSERT INTO logtbl (uid, account, logtime, logtype, qty)
			--	VALUES (@UID, @ID, GETDATE(), @LOGKIND, @QTY)
			-- ??? ??
			--UPDATE cardtbl
			--SET Point = @Point - @QTY WHERE uid = @UID AND (Kind BETWEEN 1 AND 10)
			SELECT 0 AS errcode, 1 AS type, @QTY AS comment
			COMMIT TRANSACTION
			RETURN 0 -- ????
		END
		ELSE
		BEGIN
			SELECT 13 AS errcode, 1 AS type, N'?? ??? ??' AS comment
			ROLLBACK TRANSACTION
			RETURN 13 -- ?? ??? ??
		END
	END
	ELSE
	BEGIN
		-- ???? ??
		SELECT 14 AS errcode, 1 AS type, N'???? ??' AS comment
		ROLLBACK TRANSACTION
		RETURN 14 -- ???? ??
	END
END
ELSE
BEGIN
	SELECT 19 AS errcode, 1 AS type, N'??? ?? ??' AS comment
	ROLLBACK TRANSACTION
	RETURN 19 -- ??? ?? ??
END



GO
/****** Object:  StoredProcedure [dbo].[spCheckProcUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spCheckProcUID]
	@UID int, -- ??? UID
	@QTY int,  -- ??? ????
	@KIND int = 1 -- ?? ??? ??
AS
SET NOCOUNT ON
-- ?? ??? ??? ??? ??
DECLARE @ID varchar(20)
SELECT @ID = account FROM usertbl WHERE uid = @UID
DECLARE @LOGKIND int
SELECT @LOGKIND = @KIND + 100;
DECLARE @POINT int
DECLARE @START int
DECLARE @END int
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
BEGIN TRANSACTION
-------------------------------------------------------------------------
-- ??? ?? ??: 
-- ????? ????? ???? ????? ??? ???? ??????? ??
-------------------------------------------------------------------------
SELECT @POINT = Point, @START = StartDay, @END = EndDay FROM cardtbl WHERE (uid = @UID) AND (Kind BETWEEN 1 AND 10)
IF @Point IS NULL
BEGIN
	SELECT 11 AS errcode, 1 AS type, @UID AS uid, N'??? ?? ???? ??' AS comment
	ROLLBACK TRANSACTION
	RETURN 11 -- ??? ?? ???? ??
END
ELSE IF @POINT <= 0
BEGIN
	SELECT 12 AS errcode, 1 AS type, @UID AS uid, N'?? ???? ??? ?????' AS comment
	ROLLBACK TRANSACTION
	RETURN 12 -- ?? ??? ??? ?????
END
ELSE IF @POINT > 0 AND @START = 0 AND @END = 0
BEGIN
	-- ?? ??? ??
	IF @POINT >= @QTY
	BEGIN
		-- ?? ???? ??
		--INSERT INTO logtbl (uid, account, logtime, logtype, qty)
		--	VALUES (@UID, @ID, GETDATE(), @LOGKIND, @QTY)
		-- ??? ??
		--UPDATE cardtbl
		--SET Point = @Point - @QTY WHERE uid = @UID AND (Kind BETWEEN 1 AND 10)
		SELECT 0 AS errcode, 1 AS type, @UID AS uid, @QTY AS comment
		COMMIT TRANSACTION
		RETURN 0 -- ????
	END
	ELSE
	BEGIN
		SELECT 13 AS errcode, 1 AS type, @UID AS uid, N'?? ??? ??' AS comment
		ROLLBACK TRANSACTION
		RETURN 13 -- ?? ??? ??
	END
END
ELSE IF @POINT > 0 AND @START > 0 AND @END > 0
BEGIN
	-- ???? ?? ??? ??
	DECLARE @STARTDATE smalldatetime
	DECLARE @ENDDATE smalldatetime
	DECLARE @NOW smalldatetime
	SELECT @STARTDATE = STR(@START)
	SELECT @ENDDATE = STR(@END)
	SELECT @NOW = GETDATE()
	IF @STARTDATE <= @NOW AND @NOW <= @ENDDATE + 1
	BEGIN
		-- ????
		IF @POINT >= @QTY
		BEGIN
			-- ?? ???? ??
			--INSERT INTO logtbl (uid, account, logtime, logtype, qty)
			--	VALUES (@UID, @ID, GETDATE(), @LOGKIND, @QTY)
			-- ??? ??
			--UPDATE cardtbl
			--SET Point = @Point - @QTY WHERE uid = @UID AND (Kind BETWEEN 1 AND 10)
			SELECT 0 AS errcode, 1 AS type, @UID AS uid, @QTY AS comment
			COMMIT TRANSACTION
			RETURN 0 -- ????
		END
		ELSE
		BEGIN
			SELECT 13 AS errcode, 1 AS type, @UID AS uid, N'?? ??? ??' AS comment
			ROLLBACK TRANSACTION
			RETURN 13 -- ?? ??? ??
		END
	END
	ELSE
	BEGIN
		-- ???? ??
		SELECT 14 AS errcode, 1 AS type, @UID AS uid, N'???? ??' AS comment
		ROLLBACK TRANSACTION
		RETURN 14 -- ???? ??
	END
END
ELSE
BEGIN
	SELECT 19 AS errcode, 1 AS type, @UID AS uid, N'??? ?? ??' AS comment
	ROLLBACK TRANSACTION
	RETURN 19 -- ??? ?? ??
END



GO
/****** Object:  StoredProcedure [dbo].[spCheckServiceProc]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spCheckServiceProc]
	@UID int, -- ??? UID
	@QTY int	, -- ??? ????
	@KIND int -- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
AS
SET NOCOUNT ON
-- ?? ??? ??? ??? ??
DECLARE @ID varchar(20)
SELECT @ID = account FROM usertbl WHERE uid = @UID
-- ??? ?? Kind ??
DECLARE @NEWKIND int
SELECT @NEWKIND = @KIND + 30;
DECLARE @POINT int
DECLARE @START int
DECLARE @END int
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
BEGIN TRANSACTION
-------------------------------------------------------------------------
-- ??? ??? ?? ??: 
-- ??? ????? ????? ???? ????? ??? ???? ??????? ??
-------------------------------------------------------------------------
SELECT @POINT = Point, @START = StartDay, @END = EndDay FROM cardtbl WHERE (uid = @UID) AND (Kind = @NEWKIND) AND (Kind > 50)
IF @Point IS NULL
BEGIN
	SELECT 51 AS errcode, 5 AS type, N'??? ??? ?? ???? ??' AS comment
	ROLLBACK TRANSACTION
	RETURN 51 -- ??? ?? ???? ??
END
ELSE IF @POINT <= 0
BEGIN
	SELECT 52 AS errcode, 5 AS type, N'?? ???? ??? ?????' AS comment
	ROLLBACK TRANSACTION
	RETURN 52 -- ?? ??? ??? ?????
END
ELSE IF @POINT > 0 AND @START = 0 AND @END = 0
BEGIN
	-- ?? ??? ??
	IF @POINT >= @QTY
	BEGIN
		-- ?? ???? ??
		--INSERT INTO logtbl (uid, account, logtime, logtype, qty)
		--	VALUES (@UID, @ID, GETDATE(), @NEWKIND, @QTY)
		-- ??? ??
		--UPDATE cardtbl
		--SET Point = @Point - @QTY WHERE uid = @UID AND (Kind = @NEWKIND) AND (Kind > 50)
		SELECT 0 AS errcode, 5 AS type, @QTY AS comment
		COMMIT TRANSACTION
		RETURN 0 -- ????
	END
	ELSE
	BEGIN
		SELECT 53 AS errcode, 5 AS type, N'?? ??? ??' AS comment
		ROLLBACK TRANSACTION
		RETURN 53 -- ?? ??? ??
	END
END
ELSE IF @POINT > 0 AND @START > 0 AND @END > 0
BEGIN
	-- ???? ?? ??? ??
	DECLARE @STARTDATE smalldatetime
	DECLARE @ENDDATE smalldatetime
	DECLARE @NOW smalldatetime
	SELECT @STARTDATE = STR(@START)
	SELECT @ENDDATE = STR(@END)
	SELECT @NOW = GETDATE()
	IF @STARTDATE <= @NOW AND @NOW <= @ENDDATE + 1
	BEGIN
		-- ????
		IF @POINT >= @QTY
		BEGIN
			-- ?? ???? ??
			--INSERT INTO logtbl (uid, account, logtime, logtype, qty)
			--	VALUES (@UID, @ID, GETDATE(), @NEWKIND, @QTY)
			-- ??? ??
			--UPDATE cardtbl
			--SET Point = @Point - @QTY WHERE uid = @UID AND (Kind = @NEWKIND) AND (Kind > 50)
			SELECT 0 AS errcode, 5 AS type, @QTY AS comment
			COMMIT TRANSACTION
			RETURN 0 -- ????
		END
		ELSE
		BEGIN
			SELECT 53 AS errcode, 5 AS type, N'?? ??? ??' AS comment
			ROLLBACK TRANSACTION
			RETURN 53 -- ?? ??? ??
		END
	END
	ELSE
	BEGIN
		-- ???? ??
		SELECT 54 AS errcode, 5 AS type, N'???? ??' AS comment
		ROLLBACK TRANSACTION
		RETURN 54 -- ???? ??
	END
END
ELSE
BEGIN
	SELECT 59 AS errcode, 5 AS type, N'??? ??? ?? ??' AS comment
	ROLLBACK TRANSACTION
	RETURN 59 -- ??? ?? ??
END



GO
/****** Object:  StoredProcedure [dbo].[spCheckServiceProcUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spCheckServiceProcUID]
	@UID int, -- ??? UID
	@QTY int	, -- ??? ????
	@KIND int -- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
AS
SET NOCOUNT ON
-- ?? ??? ??? ??? ??
DECLARE @ID varchar(20)
SELECT @ID = account FROM usertbl WHERE uid = @UID
-- ??? ?? Kind ??
DECLARE @NEWKIND int
SELECT @NEWKIND = @KIND + 30;
DECLARE @POINT int
DECLARE @START int
DECLARE @END int
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
BEGIN TRANSACTION
-------------------------------------------------------------------------
-- ??? ??? ?? ??: 
-- ??? ????? ????? ???? ????? ??? ???? ??????? ??
-------------------------------------------------------------------------
SELECT @POINT = Point, @START = StartDay, @END = EndDay FROM cardtbl WHERE (uid = @UID) AND (Kind = @NEWKIND) AND (Kind > 50)
IF @Point IS NULL
BEGIN
	SELECT 51 AS errcode, 5 AS type, @UID AS uid, N'??? ??? ?? ???? ??' AS comment
	ROLLBACK TRANSACTION
	RETURN 51 -- ??? ?? ???? ??
END
ELSE IF @POINT <= 0
BEGIN
	SELECT 52 AS errcode, 5 AS type, @UID AS uid, N'?? ???? ??? ?????' AS comment
	ROLLBACK TRANSACTION
	RETURN 52 -- ?? ??? ??? ?????
END
ELSE IF @POINT > 0 AND @START = 0 AND @END = 0
BEGIN
	-- ?? ??? ??
	IF @POINT >= @QTY
	BEGIN
		-- ?? ???? ??
		--INSERT INTO logtbl (uid, account, logtime, logtype, qty)
		--	VALUES (@UID, @ID, GETDATE(), @NEWKIND, @QTY)
		-- ??? ??
		--UPDATE cardtbl
		--SET Point = @Point - @QTY WHERE uid = @UID AND (Kind = @NEWKIND) AND (Kind > 50)
		SELECT 0 AS errcode, 5 AS type, @UID AS uid, @QTY AS comment
		COMMIT TRANSACTION
		RETURN 0 -- ????
	END
	ELSE
	BEGIN
		SELECT 53 AS errcode, 5 AS type, @UID AS uid, N'?? ??? ??' AS comment
		ROLLBACK TRANSACTION
		RETURN 53 -- ?? ??? ??
	END
END
ELSE IF @POINT > 0 AND @START > 0 AND @END > 0
BEGIN
	-- ???? ?? ??? ??
	DECLARE @STARTDATE smalldatetime
	DECLARE @ENDDATE smalldatetime
	DECLARE @NOW smalldatetime
	SELECT @STARTDATE = STR(@START)
	SELECT @ENDDATE = STR(@END)
	SELECT @NOW = GETDATE()
	IF @STARTDATE <= @NOW AND @NOW <= @ENDDATE + 1
	BEGIN
		-- ????
		IF @POINT >= @QTY
		BEGIN
			-- ?? ???? ??
			--INSERT INTO logtbl (uid, account, logtime, logtype, qty)
			--	VALUES (@UID, @ID, GETDATE(), @NEWKIND, @QTY)
			-- ??? ??
			--UPDATE cardtbl
			--SET Point = @Point - @QTY WHERE uid = @UID AND (Kind = @NEWKIND) AND (Kind > 50)
			SELECT 0 AS errcode, 5 AS type, @UID AS uid, @QTY AS comment
			COMMIT TRANSACTION
			RETURN 0 -- ????
		END
		ELSE
		BEGIN
			SELECT 53 AS errcode, 5 AS type, @UID AS uid, N'?? ??? ??' AS comment
			ROLLBACK TRANSACTION
			RETURN 53 -- ?? ??? ??
		END
	END
	ELSE
	BEGIN
		-- ???? ??
		SELECT 54 AS errcode, 5 AS type, @UID AS uid, N'???? ??' AS comment
		ROLLBACK TRANSACTION
		RETURN 54 -- ???? ??
	END
END
ELSE
BEGIN
	SELECT 59 AS errcode, 5 AS type, @UID AS uid, N'??? ??? ?? ??' AS comment
	ROLLBACK TRANSACTION
	RETURN 59 -- ??? ?? ??
END



GO
/****** Object:  StoredProcedure [dbo].[spCreateSN]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** ??: ?? ???? dbo.spCreateSN    ???? ??: 2002-03-19 ?? 5:30:44 ******/
CREATE PROC [dbo].[spCreateSN]
	@SN char(20),
	@UID int,
	@KIND int,
	@CHECKDAY int,
	@POINT int
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @INDEX int
SELECT  @INDEX = [INDEX] FROM CARDTBL WHERE UID = @UID AND KIND = @KIND
IF @INDEX IS NULL
BEGIN
	-- ???? ?? ??? ?? ???
	
	DECLARE @SDAY int
	DECLARE @EDAY int
	DECLARE @CURTIME smalldatetime
	SET @CURTIME = GETDATE()
	SET @SDAY = dbo.fnMakeType(@CURTIME)
	SET @EDAY = dbo.fnMakeType(@CURTIME+@CHECKDAY)
	INSERT CARDTBL (ID,KIND,POINT,STARTDAY,ENDDAY,UID) VALUES (@SN,@KIND,0,@SDAY,@EDAY,@UID)
	INSERT INTO REGIMONTH (REGIDATE,GAMETYPE,USEPOINT,USEDAY,REGITYPE) VALUES (@SDAY,@KIND,@POINT,@CHECKDAY,0)
	SELECT 0 AS ERRCODE,@SDAY AS SDAY,@EDAY AS EDAY
	RETURN
END
ELSE
BEGIN
	-- ?? ???? ?? ?? ???
	SELECT 1 AS ERRCODE,'UNKOWN ERROR' AS COMMENT
	RETURN
END
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spCreditMonth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spCreditMonth]
	@ID varchar(20),
	@UID int,
	@CHECKDAY int
AS
SET NOCOUNT ON
-- DECLARE
-- ????? ?? ?? ???
DECLARE @STARTDAY int
DECLARE @ENDDAY int
DECLARE @CURTIME smalldatetime
SET @CURTIME = GETDATE()
SET @STARTDAY = dbo.fnMakeType(@CURTIME)
SET @ENDDAY = dbo.fnMakeType(@CURTIME+@CHECKDAY)
INSERT INTO CARDTBL (ID,KIND,POINT,STARTDAY,ENDDAY,UID) VALUES (@ID,21,0,@STARTDAY,@ENDDAY,@UID)
SELECT 1 AS ERRCODE,@STARTDAY AS STARTDAY,@ENDDAY AS ENDDAY,'REGIST NOW' AS COMMNET
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spEtherMonth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spEtherMonth]
	@ID varchar(20),
	@ACCOUNT varchar(10),
	@UID int
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @REGIDATE int
SET @REGIDATE = dbo.fnMakeType(GETDATE())
DECLARE @STARTDAY int
DECLARE @ENDDAY int
DECLARE @CURTIME smalldatetime
SET @CURTIME = GETDATE()
SET @STARTDAY = dbo.fnMakeType(@CURTIME)
SET @ENDDAY = dbo.fnMakeType(@CURTIME+30)
UPDATE CARDTBL SET STARTDAY = @STARTDAY,ENDDAY = @ENDDAY,KIND = 21,UID = @UID WHERE ID = @ID
INSERT INTO REGIMONTH (REGIDATE,GAMETYPE,USEPOINT,USEDAY,REGITYPE,ACCOUNT) VALUES (@REGIDATE,80,0,30,0,@ACCOUNT)
SELECT @STARTDAY AS STARTDAY,@ENDDAY AS ENDDAY
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spHinetMonthRegi]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO


CREATE	 PROC [dbo].[spHinetMonthRegi]
	@ACCOUNT varchar(10),
	@KIND int,
	@HINET_ID varchar(30),
	@SERIAL VARCHAR(20) = null
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @UID int
SELECT @UID=UID FROM USERTBL where ACCOUNT = @ACCOUNT
IF @UID is NULL
BEGIN
	-- ???? ?? ??!!
	SELECT 99 AS ERRCODE
	RETURN
END
ELSE
BEGIN
	DECLARE @INDEX int
	DECLARE @SDAY int
	DECLARE @EDAY int
	DECLARE @STARTDAY int
	DECLARE @ENDDAY int
	SELECT @INDEX = [INDEX],@SDAY = STARTDAY,@EDAY = ENDDAY FROM CARDTBL WHERE UID = @UID AND KIND = @KIND
	IF @INDEX IS NULL
	BEGIN
		-- ??? ???? ?? ???
		DECLARE @TIMECUR smalldatetime
		SET @TIMECUR = GETDATE()
		SET @STARTDAY = dbo.fnMakeType(@TIMECUR)
		SET @ENDDAY = dbo.fnMakeType(@TIMECUR+30)
		INSERT HINETMONTH (HINET_ID,STARTDAY,ENDDAY,ACCOUNT,DAYADD,REGITIME,KIND) VALUES (@HINET_ID,@STARTDAY,@ENDDAY,@ACCOUNT,0,@STARTDAY,@KIND)
		INSERT CARDTBL (ID,KIND,POINT,STARTDAY,ENDDAY,UID) VALUES (@SERIAL,@KIND,0,@STARTDAY,@ENDDAY,@UID)
		SELECT 0 AS ERRCODE,@STARTDAY AS STARTDAY,@ENDDAY AS ENDDAY
		RETURN
	END
	ELSE
	BEGIN		
		-- ??? ???? ???? ???
		DECLARE @SEL int
		SET @SEL = dbo.fnCheckDate(@SDAY,@EDAY,GETDATE())
		IF @SEL = 1
		BEGIN
			-- ?? ????? ?? ???	
			DECLARE @PLUSDAY smalldatetime
			DECLARE @ADDTIME int
			SET @PLUSDAY = STR(@EDAY)
			SET @ADDTIME = dbo.fnMakeType(@PLUSDAY+30)
			INSERT HINETMONTH (HINET_ID,STARTDAY,ENDDAY,ACCOUNT,DAYADD,REGITIME,KIND) VALUES (@HINET_ID,@EDAY,@ADDTIME,@ACCOUNT,1, dbo.fnMakeType(GETDATE()),@KIND)
			UPDATE CARDTBL SET ENDDAY = @ADDTIME WHERE UID = @UID AND KIND = @KIND
			SELECT 1 AS ERRCODE,@ADDTIME AS ADDTIME,@SDAY AS STARTDAY,@EDAY AS ENDDAY
			RETURN
		END
		ELSE
		BEGIN		
			-- ????? ?? ???
			DECLARE @CURTIME smalldatetime
			SET @CURTIME = GETDATE()
			SET @STARTDAY = dbo.fnMakeType(@CURTIME)
			SET @ENDDAY = dbo.fnMakeType(@CURTIME+30)
			INSERT HINETMONTH (HINET_ID,STARTDAY,ENDDAY,ACCOUNT,DAYADD,REGITIME,KIND) VALUES (@HINET_ID,@STARTDAY,@ENDDAY,@ACCOUNT,0,@STARTDAY,@KIND)
			UPDATE CARDTBL SET STARTDAY = @STARTDAY,ENDDAY = @ENDDAY WHERE UID = @UID AND KIND = @KIND
			SELECT 2 AS ERRCODE,@STARTDAY AS STARTDAY,@ENDDAY AS ENDDAY
			RETURN
		END
	END
END
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spHinetPoint]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO


CREATE PROC [dbo].[spHinetPoint]
	@ACCOUNT varchar(10),
	@POINT int,
	@HINET_ID varchar(30),
	@SERIAL VARCHAR(20) = null
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @UID int
SELECT @UID=UID FROM USERTBL where ACCOUNT = @ACCOUNT
IF @UID is NULL
BEGIN
	-- ???? ?? ??!!
	SELECT 2 AS ERRCODE
	RETURN
END
ELSE
BEGIN
	DECLARE @INDEX int
	DECLARE @RPOINT int
	DECLARE @CURTIME smalldatetime
	DECLARE @CERTIFYDAY int
	SET @CURTIME = GETDATE()
	SET @CERTIFYDAY = dbo.fnMakeType(@CURTIME)
	INSERT HINETPOINT (HINET_ID,USE_POINT,CERTIFY_DAY,ACCOUNT) VALUES (@HINET_ID,@POINT,@CERTIFYDAY,@ACCOUNT)
	SELECT @INDEX = [INDEX],@RPOINT = POINT FROM CARDTBL WHERE UID = @UID AND KIND < 20
	IF @INDEX IS NULL
	BEGIN
		-- ??? ???? ?? ?? ??
		INSERT CARDTBL (ID,KIND,POINT,STARTDAY,ENDDAY,UID) VALUES (@SERIAL,5,@POINT,0,0,@UID)
		SELECT 0 AS ERRCODE
		RETURN
	END
	ELSE
	BEGIN
		-- ???? ???? ??
		UPDATE CARDTBL SET POINT=POINT+@POINT WHERE UID = @UID
		SELECT 1 AS ERRCODE,@RPOINT AS RPOINT
		RETURN
	END
	RETURN
END
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spJoinUser]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[spJoinUser]
	@ACCOUNT	varchar(20),
	@PASSWD	varchar(20),
	@WRITER	varchar(20),
	@SEX		char(2),
	@BIRTH	char(11),
	@ZIP_CODE	varchar(20),
	@ADDRESS1	varchar(80),
	@ADDRESS2	varchar(80),
	@MOBILE	varchar(20),
	@PHONE	varchar(20),
	@EMAIL	varchar(50),
	@JOB		varchar(20),
	@RESIDENT_NUM	varchar(20),
	@LANGUAGE	varchar(30)
AS
SET NOCOUNT ON
DECLARE @ERROR int
DECLARE @UID int
SELECT @UID = UID FROM USERTBL WHERE ACCOUNT = @ACCOUNT

IF @UID IS NULL and @ACCOUNT<>''
BEGIN
	BEGIN TRANSACTION
	INSERT USERTBL (ACCOUNT,PASSWD,WRITER,SEX,BIRTH,ZIP_CODE,ADDRESS1,ADDRESS2,MOBILE,PHONE,EMAIL,JOB,RESIDENT_NUM,timechk) VALUES 
			(@ACCOUNT,@PASSWD,@WRITER,@SEX,@BIRTH,@ZIP_CODE,@ADDRESS1,@ADDRESS2,@MOBILE,@PHONE,@EMAIL,@JOB,@RESIDENT_NUM,@LANGUAGE)
	SELECT @ERROR = @@ERROR
	-- Add Service Points
	--IF @ERROR = 0
	--BEGIN
		--EXEC @ERROR=pay_gamemyth..spAddServicePoints @ACCOUNT
	--END
	if @ERROR>0
		ROLLBACK TRANSACTION
	else
		COMMIT TRANSACTION

	SELECT @ERROR AS ERRCODE
	RETURN @ERROR
END
ELSE
BEGIN
	SELECT 1 AS ERRCODE
	RETURN 1
END
RETURN


GO
/****** Object:  StoredProcedure [dbo].[spLoginAuth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spLoginAuth]
	@ID varchar(20),
	@PASSWD varchar(30),
	@KIND int,	-- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
	@TYPE int = 5	-- ????, 1:???, 2:??, 5:???
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @QTY int
DECLARE @START smalldatetime
DECLARE @END smalldatetime
DECLARE @NOW smalldatetime
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID AND passwd = @PASSWD
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 2 AS type, N'??? ??? ???? ??? ??? ??' AS comment
	RETURN 1 -- ??? ??? ???? ??? ??? ??
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 2 AS type, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
IF @TYPE = 5
BEGIN
-- ??? ?? ?????? ????.
DECLARE @POINT int
DECLARE @NEWKIND int
SELECT @NEWKIND = @KIND + 30;
SELECT @POINT = Point FROM cardtbl WHERE uid = @UID AND Kind = @NEWKIND AND Kind > 50
IF @Point IS NULL
BEGIN
	--SELECT 51 AS errcode, 5 AS type, N'??? ?? ???? ??' AS comment
	--RETURN 51 -- ??? ?? ???? ??
	EXEC spLoginAuth @ID, @PASSWD, @KIND, 2
	RETURN
	
END
ELSE
BEGIN
	-- ??? ?? ???
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spServiceProc @UID, @QTY, @KIND 
	RETURN 
END
END -- ??? ??? ?? ?
-------------------------------------------------------------------------
-- ?? ??? ??
-------------------------------------------------------------------------
ELSE IF @TYPE = 2
BEGIN
-- ???? ?????? ???? ???? ????? ???
SELECT @START = STR(StartDay), @END = STR(EndDay) FROM cardtbl WHERE uid = @UID AND Kind = @KIND AND Kind >= 21 AND Kind <= 50
SELECT @NOW = GETDATE()
IF (@START IS NULL) OR (@END IS NULL)
BEGIN
	-- ???? ???? ??, ??? ???? ??
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spPointProc @UID, @QTY, @KIND
	RETURN 
END
ELSE IF @START > @NOW
BEGIN
	SELECT 21 AS errcode, 2 AS type, N'?? ????? ???? ??' AS comment
	RETURN 21 -- ?? ????? ???? ??
END
ELSE IF @NOW > @END+1
BEGIN
	-- ?? ?? ?? ?? ??
	DELETE cardtbl WHERE uid = @UID AND Kind = @KIND AND Kind >= 21 AND Kind <= 50
	-- ?? ???? ??
	INSERT INTO logtbl (uid, account, logtime, logtype, qty)
		VALUES (@UID, @ID, GETDATE(), @KIND+500, 0)
	SELECT 22 AS errcode, 2 AS type, N'?? ???? ??' AS comment
	RETURN 22 -- ?? ???? ??
END
ELSE IF @START <= @NOW AND @NOW <= @END+1
BEGIN
	-- ?? ???? ??
	INSERT INTO logtbl (uid, account, logtime, logtype, qty)
		VALUES (@UID, @ID, GETDATE(), @KIND, 0)
	-- ?? ?? ??? ??
	SELECT 0 AS errcode, 2 AS type, @END+1 AS comment
	RETURN 0
END
ELSE
BEGIN
	SELECT 29 AS errcode, 2 AS type, N'?? ?? ??' AS comment
	RETURN 29 -- ?? ?? ??
END
END -- ?? ??? ?? ?
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
ELSE IF @TYPE = 1
BEGIN
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 1 AS type, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spPointProc @UID, @QTY, @KIND
	RETURN 
END -- ??? ??? ?? ?
ELSE
BEGIN
	SELECT 9 AS errcode, 2 AS type, N'??? ?? ??' AS comment
	RETURN 9 -- ??? ?? ??
END
SELECT 99 AS errcode, 2 AS type, N'?? ?? ??' AS comment
RETURN 99 -- ?? ?? ??



GO
/****** Object:  StoredProcedure [dbo].[spLoginAuthLT]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spLoginAuthLT]
	@ID varchar(20),
	@PASSWD varchar(30),
	@KIND int,	-- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
	@TYPE int = 0	-- ????, 1:???, 2:??, 5:???
AS
SET NOCOUNT ON
EXEC spNoCardAuth @ID, @PASSWD, @KIND, @TYPE



GO
/****** Object:  StoredProcedure [dbo].[spLoginAuthMyth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER OFF
GO


CREATE PROC [dbo].[spLoginAuthMyth]
	@ID varchar(20),
	@PASSWD varchar(30),
	@ip	varchar(15)
AS
SET NOCOUNT ON
EXEC spUserAuthUID @ID, @PASSWD


GO
/****** Object:  StoredProcedure [dbo].[spLoginAuthTank]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spLoginAuthTank]
	@ID varchar(20),
	@PASSWD varchar(30)
AS
SET NOCOUNT ON
EXEC spNoCardAuth @ID, @PASSWD, 22



GO
/****** Object:  StoredProcedure [dbo].[spLoginAuthUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spLoginAuthUID]
	@ID varchar(20),
	@PASSWD varchar(30),
	@KIND int,	-- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
	@TYPE int = 5	-- ????, 1:???, 2:??, 5:???
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @QTY int
DECLARE @START smalldatetime
DECLARE @END smalldatetime
DECLARE @NOW smalldatetime
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID AND passwd = @PASSWD
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 2 AS type, @UID AS uid, N'??? ??? ???? ??? ??? ??' AS comment
	RETURN 1 -- ??? ??? ???? ??? ??? ??
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 2 AS type, @UID AS uid, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
IF @TYPE = 5
BEGIN
-- ??? ?? ?????? ????.
DECLARE @POINT int
DECLARE @NEWKIND int
SELECT @NEWKIND = @KIND + 30;
SELECT @POINT = Point FROM cardtbl WHERE uid = @UID AND Kind = @NEWKIND AND Kind > 50
IF @Point IS NULL
BEGIN
	--SELECT 51 AS errcode, 5 AS type, N'??? ?? ???? ??' AS comment
	--RETURN 51 -- ??? ?? ???? ??
	EXEC spLoginAuthUID @ID, @PASSWD, @KIND, 2
	RETURN
	
END
ELSE
BEGIN
	-- ??? ?? ???
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, @UID AS uid, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spServiceProcUID @UID, @QTY, @KIND 
	RETURN 
END
END -- ??? ??? ?? ?
-------------------------------------------------------------------------
-- ?? ??? ??
-------------------------------------------------------------------------
ELSE IF @TYPE = 2
BEGIN
-- ???? ?????? ???? ???? ????? ???
SELECT @START = STR(StartDay), @END = STR(EndDay) FROM cardtbl WHERE uid = @UID AND Kind = @KIND AND Kind >= 21 AND Kind <= 50
SELECT @NOW = GETDATE()
IF (@START IS NULL) OR (@END IS NULL)
BEGIN
	-- ???? ???? ??, ??? ???? ??
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, @UID AS uid, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spPointProcUID @UID, @QTY, @KIND
	RETURN 
END
ELSE IF @START > @NOW
BEGIN
	SELECT 21 AS errcode, 2 AS type, @UID AS uid, N'?? ????? ???? ??' AS comment
	RETURN 21 -- ?? ????? ???? ??
END
ELSE IF @NOW > @END+1
BEGIN
	-- ?? ?? ?? ?? ??
	DELETE cardtbl WHERE uid = @UID AND Kind = @KIND AND Kind >= 21 AND Kind <= 50
	-- ?? ???? ??
	INSERT INTO logtbl (uid, account, logtime, logtype, qty)
		VALUES (@UID, @ID, GETDATE(), @KIND+500, 0)
	SELECT 22 AS errcode, 2 AS type, @UID AS uid, N'?? ???? ??' AS comment
	RETURN 22 -- ?? ???? ??
END
ELSE IF @START <= @NOW AND @NOW <= @END+1
BEGIN
	-- ?? ???? ??
	INSERT INTO logtbl (uid, account, logtime, logtype, qty)
		VALUES (@UID, @ID, GETDATE(), @KIND, 0)
	-- ?? ?? ??? ??
	SELECT 0 AS errcode, 2 AS type, @END+1 AS comment
	RETURN 0
END
ELSE
BEGIN
	SELECT 29 AS errcode, 2 AS type, @UID AS uid, N'?? ?? ??' AS comment
	RETURN 29 -- ?? ?? ??
END
END -- ?? ??? ?? ?
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
ELSE IF @TYPE = 1
BEGIN
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 1 AS type, @UID AS uid, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spPointProcUID @UID, @QTY, @KIND
	RETURN 
END -- ??? ??? ?? ?
ELSE
BEGIN
	SELECT 9 AS errcode, 2 AS type, @UID AS uid, N'??? ?? ??' AS comment
	RETURN 9 -- ??? ?? ??
END
SELECT 99 AS errcode, 2 AS type, @UID AS uid, N'?? ?? ??' AS comment
RETURN 99 -- ?? ?? ??



GO
/****** Object:  StoredProcedure [dbo].[spMemRegi]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spMemRegi]
	@ACCOUNT varchar(20),
	@PASSWD varchar(20),
	@WRITER varchar(20),
	@SEX char(2),
	@BIRTH char(11),
	@ZIP_CODE varchar(20),
	@ADDRESS1 varchar(80),
	@ADDRESS2 varchar(80),
	@MOBILE varchar(20),
	@PHONE varchar(20),
	@EMAIL varchar(50),
	@JOB varchar(20),
	@RESIDENT_NUM varchar(20),
	@NOW varchar(30)
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @ERROR int
DECLARE @UID int
SELECT @UID = UID FROM USERTBL WHERE ACCOUNT = @ACCOUNT
IF @UID IS NULL
BEGIN
	INSERT USERTBL (ACCOUNT,PASSWD,WRITER,SEX,BIRTH,ZIP_CODE,ADDRESS1,ADDRESS2,MOBILE,PHONE,EMAIL,JOB,RESIDENT_NUM,TIMECHK) VALUES 
			(@ACCOUNT,@PASSWD,@WRITER,@SEX,@BIRTH,@ZIP_CODE,@ADDRESS1,@ADDRESS2,@MOBILE,@PHONE,@EMAIL,@JOB,@RESIDENT_NUM,@NOW)
	INSERT ETHER.dbo.USERTBL (ACCOUNT,ABSTIME) VALUES (@ACCOUNT,0)
	SET @ERROR = @@ERROR
	SELECT @ERROR AS ERRCODE
	RETURN
END
ELSE
BEGIN
	SELECT 1 AS ERRCODE
	RETURN
END
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spMyInfo]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spMyInfo]
	@ACCOUNT varchar(20),
	@PASSWD varchar(20),
	@IC varchar(20)
AS
SET NOCOUNT ON
SELECT * FROM USERTBL WHERE ACCOUNT = @ACCOUNT AND PASSWD = @PASSWD AND resident_num = @IC
RETURN


GO
/****** Object:  StoredProcedure [dbo].[spNoCardAuth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spNoCardAuth]
	@ID varchar(20),
	@PASSWD varchar(30),
	@KIND int,	-- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
	@TYPE int = 0	-- ????, 1:???, 2:??, 5:???
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @QTY int
DECLARE @START smalldatetime
DECLARE @END smalldatetime
DECLARE @NOW smalldatetime
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID AND passwd = @PASSWD
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 9 AS type, N'??? ??? ???? ??? ??? ??' AS comment
	RETURN 1 -- ??? ??? ???? ??? ??? ??
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 9 AS type, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
-- ?? ??? ??? ??
SELECT 0 AS errcode, 9 AS type, N'??? ??' AS comment
RETURN 0



GO
/****** Object:  StoredProcedure [dbo].[spNoCardAuthUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spNoCardAuthUID]
	@ID varchar(20),
	@PASSWD varchar(30),
	@KIND int,	-- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
	@TYPE int = 0	-- ????, 1:???, 2:??, 5:???
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @QTY int
DECLARE @START smalldatetime
DECLARE @END smalldatetime
DECLARE @NOW smalldatetime
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID AND passwd = @PASSWD
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 9 AS type, @UID AS uid, N'??? ??? ???? ??? ??? ??' AS comment
	RETURN 1 -- ??? ??? ???? ??? ??? ??
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 9 AS type, @UID AS uid, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
-- ?? ??? ??? ??
SELECT 0 AS errcode, 9 AS type, @UID AS uid, N'??? ??' AS comment
RETURN 0



GO
/****** Object:  StoredProcedure [dbo].[spOverlapID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO


CREATE PROC [dbo].[spOverlapID]
	@ACCOUNT varchar(20)
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @UID int
SELECT @UID = UID FROM USERTBL WHERE ACCOUNT = @ACCOUNT
IF @UID IS NULL
BEGIN
	-- ???? ?? ID
	SELECT 0 AS ERRCODE
	RETURN
END
ELSE
BEGIN
	-- ?? ???? ID
	SELECT 1 AS ERRCODE
	RETURN
END
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spPointAuth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spPointAuth]
	@ID varchar(20),
	@PTYPE int = 1,	-- ??? ??, pqtytbl? ?? ?? ?? ~= Kind
	@PQTY int = 0	-- @PTYPE? 0? ?? ? ???? ????? ??
AS
SET NOCOUNT ON
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 1 AS type, N'??? ??? ???? ??' AS comment
	RETURN 1 -- ??? ??? ???? ?? 
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 1 AS type, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
DECLARE @NEWKIND int
-- ?? ???? ??
DECLARE @QTY int
IF @PTYPE = 0
BEGIN
	SELECT @QTY = @PQTY
	SELECT @NEWKIND = 100;
END
ELSE
BEGIN
	
	-- pqtytbl ?? @PTYPE? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @PTYPE
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 1 AS type, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	SELECT @NEWKIND = @PTYPE + 30;
END
-- ??? ?? ????? ?? ??? ?? ?????? ????
-- ??? ????? ????.
DECLARE @COUNT int
-- ??? ??? ??? ???? ??? ??
SELECT @COUNT = COUNT(*) FROM cardtbl WHERE uid = @UID AND (Kind = @NEWKIND) AND (Kind > 50)
IF @COUNT > 0
BEGIN
	-- ??? ?? ??? ????
	EXEC spServiceProc @UID, @QTY, @PTYPE
	RETURN
END
ELSE
BEGIN
-- ??? ??? ???? ??? ??
SELECT @COUNT = COUNT(*) FROM cardtbl WHERE uid = @UID AND (Kind BETWEEN 1 AND 10)
IF @COUNT IS NULL
BEGIN
	SELECT 19 AS errcode, 1 AS type, N'??? ?? ??' AS comment
	RETURN 19 -- ??? ?? ?? 
	
END
ELSE IF @COUNT = 0
BEGIN
	SELECT 19 AS errcode, 1 AS type, N'??? ?? ??' AS comment
	RETURN 19 -- ??? ?? ??
END
-- ??? ?? ?????? ??
EXEC spPointProc @UID, @QTY, @PTYPE
RETURN
END



GO
/****** Object:  StoredProcedure [dbo].[spPointAuthUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spPointAuthUID]
	@ID varchar(20),
	@PTYPE int = 1,	-- ??? ??, pqtytbl? ?? ?? ?? ~= Kind
	@PQTY int = 0	-- @PTYPE? 0? ?? ? ???? ????? ??
AS
SET NOCOUNT ON
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 1 AS type, @UID AS uid, N'??? ??? ???? ??' AS comment
	RETURN 1 -- ??? ??? ???? ?? 
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 1 AS type, @UID AS uid, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
DECLARE @NEWKIND int
-- ?? ???? ??
DECLARE @QTY int
IF @PTYPE = 0
BEGIN
	SELECT @QTY = @PQTY
	SELECT @NEWKIND = 100;
END
ELSE
BEGIN
	
	-- pqtytbl ?? @PTYPE? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @PTYPE
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 1 AS type, @UID AS uid, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	SELECT @NEWKIND = @PTYPE + 30;
END
-- ??? ?? ????? ?? ??? ?? ?????? ????
-- ??? ????? ????.
DECLARE @COUNT int
-- ??? ??? ??? ???? ??? ??
SELECT @COUNT = COUNT(*) FROM cardtbl WHERE uid = @UID AND (Kind = @NEWKIND) AND (Kind > 50)
IF @COUNT > 0
BEGIN
	-- ??? ?? ??? ????
	EXEC spServiceProcUID @UID, @QTY, @PTYPE
	RETURN
END
ELSE
BEGIN
-- ??? ??? ???? ??? ??
SELECT @COUNT = COUNT(*) FROM cardtbl WHERE uid = @UID AND (Kind BETWEEN 1 AND 10)
IF @COUNT IS NULL
BEGIN
	SELECT 19 AS errcode, 1 AS type, @UID AS uid, N'??? ?? ??' AS comment
	RETURN 19 -- ??? ?? ?? 
	
END
ELSE IF @COUNT = 0
BEGIN
	SELECT 19 AS errcode, 1 AS type, @UID AS uid, N'??? ?? ??' AS comment
	RETURN 19 -- ??? ?? ??
END
-- ??? ?? ?????? ??
EXEC spPointProcUID @UID, @QTY, @PTYPE
RETURN
END



GO
/****** Object:  StoredProcedure [dbo].[spPointBack]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spPointBack]
	@ID varchar(20),	-- ??? ID
	@PTYPE int,	-- ??? ??? ??? ???
	@PQTY int = 0	-- @PTYPE? 0? ?? ? ???? ????? ??
AS
SET NOCOUNT ON
-- ??? ID?? ??? UID ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 1 AS type, N'??? ??? ???? ??' AS comment
	RETURN 1 -- ??? ??? ???? ?? 
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 1 AS type, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
DECLARE @NEWKIND int
-- ?? ???? ??
DECLARE @QTY int
IF @PTYPE = 0
BEGIN
	SELECT @QTY = @PQTY
	SELECT @NEWKIND = 100;
END
ELSE
BEGIN
	
	-- pqtytbl ?? @PTYPE? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @PTYPE
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 1 AS type, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	SELECT @NEWKIND = @PTYPE + 30;
END
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
BEGIN TRANSACTION
-------------------------------------------------------------------------
-- ??? ?? ????
-------------------------------------------------------------------------
DECLARE @COUNT int
DECLARE @LOGKIND int
-- ??? ??? ??? ???? ??? ??
SELECT @COUNT = COUNT(*) FROM cardtbl WHERE uid = @UID AND (Kind = @NEWKIND) AND (Kind > 50)
IF @COUNT > 0
BEGIN
	-- ??? ??
	UPDATE cardtbl
	SET Point = Point + @QTY WHERE uid = @UID AND (Kind = @NEWKIND) AND (Kind > 50)
	COMMIT TRANSACTION
	-- ?? ???? ??
	SELECT @LOGKIND = @PTYPE + 230;
	INSERT INTO logtbl (uid, account, logtime, logtype, qty)
		VALUES (@UID, @ID, GETDATE(), @LOGKIND, @QTY)
	SELECT 0 AS errcode, 20 AS type, @QTY AS comment
	RETURN 0 -- ????
END
ELSE
BEGIN
-- ??? ??? ???? ??? ??
SELECT @COUNT = COUNT(*) FROM cardtbl WHERE uid = @UID AND (Kind BETWEEN 1 AND 10)
IF @COUNT IS NULL
BEGIN
	SELECT 209 AS errcode, 20 AS type, N'??? ?? ??' AS comment
	RETURN 209 -- ??? ?? ?? 
	
END
ELSE IF @COUNT = 0
BEGIN
	SELECT 209 AS errcode, 20 AS type, N'??? ?? ??' AS comment
	RETURN 209 -- ??? ?? ??
END
-- ??? ??
UPDATE cardtbl
SET Point = Point + @QTY WHERE uid = @UID AND (Kind BETWEEN 1 AND 10)
COMMIT TRANSACTION
-- ?? ???? ??
SELECT @LOGKIND = @PTYPE + 200;
INSERT INTO logtbl (uid, account, logtime, logtype, qty)
	VALUES (@UID, @ID, GETDATE(), @LOGKIND, @QTY)
SELECT 0 AS errcode, 20 AS type, @QTY AS comment
RETURN 0 -- ????
END



GO
/****** Object:  StoredProcedure [dbo].[spPointBackUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spPointBackUID]
	@ID varchar(20),	-- ??? ID
	@PTYPE int,	-- ??? ??? ??? ???
	@PQTY int = 0	-- @PTYPE? 0? ?? ? ???? ????? ??
AS
SET NOCOUNT ON
-- ??? ID?? ??? UID ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 1 AS type, @UID AS uid, N'??? ??? ???? ??' AS comment
	RETURN 1 -- ??? ??? ???? ?? 
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 1 AS type, @UID AS uid, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
DECLARE @NEWKIND int
-- ?? ???? ??
DECLARE @QTY int
IF @PTYPE = 0
BEGIN
	SELECT @QTY = @PQTY
	SELECT @NEWKIND = 100;
END
ELSE
BEGIN
	
	-- pqtytbl ?? @PTYPE? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @PTYPE
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 1 AS type, @UID AS uid, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	SELECT @NEWKIND = @PTYPE + 30;
END
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
BEGIN TRANSACTION
-------------------------------------------------------------------------
-- ??? ?? ????
-------------------------------------------------------------------------
DECLARE @COUNT int
DECLARE @LOGKIND int
-- ??? ??? ??? ???? ??? ??
SELECT @COUNT = COUNT(*) FROM cardtbl WHERE uid = @UID AND (Kind = @NEWKIND) AND (Kind > 50)
IF @COUNT > 0
BEGIN
	-- ??? ??
	UPDATE cardtbl
	SET Point = Point + @QTY WHERE uid = @UID AND (Kind = @NEWKIND) AND (Kind > 50)
	COMMIT TRANSACTION
	-- ?? ???? ??
	SELECT @LOGKIND = @PTYPE + 230;
	INSERT INTO logtbl (uid, account, logtime, logtype, qty)
		VALUES (@UID, @ID, GETDATE(), @LOGKIND, @QTY)
	SELECT 0 AS errcode, 20 AS type, @UID AS uid, @QTY AS comment
	RETURN 0 -- ????
END
ELSE
BEGIN
-- ??? ??? ???? ??? ??
SELECT @COUNT = COUNT(*) FROM cardtbl WHERE uid = @UID AND (Kind BETWEEN 1 AND 10)
IF @COUNT IS NULL
BEGIN
	SELECT 209 AS errcode, 20 AS type, @UID AS uid, N'??? ?? ??' AS comment
	RETURN 209 -- ??? ?? ?? 
	
END
ELSE IF @COUNT = 0
BEGIN
	SELECT 209 AS errcode, 20 AS type, @UID AS uid, N'??? ?? ??' AS comment
	RETURN 209 -- ??? ?? ??
END
-- ??? ??
UPDATE cardtbl
SET Point = Point + @QTY WHERE uid = @UID AND (Kind BETWEEN 1 AND 10)
COMMIT TRANSACTION
-- ?? ???? ??
SELECT @LOGKIND = @PTYPE + 200;
INSERT INTO logtbl (uid, account, logtime, logtype, qty)
	VALUES (@UID, @ID, GETDATE(), @LOGKIND, @QTY)
SELECT 0 AS errcode, 20 AS type, @UID AS uid, @QTY AS comment
RETURN 0 -- ????
END



GO
/****** Object:  StoredProcedure [dbo].[spPointChecK]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO


CREATE PROC [dbo].[spPointChecK]
	@ACCOUNT varchar(10)
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @UID int
SELECT @UID=UID FROM USERTBL where ACCOUNT = @ACCOUNT
IF @UID is NULL
BEGIN
	--???? ?? ???
	SELECT 1 AS ERRCODE
	RETURN
END
ELSE
BEGIN
	SELECT POINT FROM CARDTBL WHERE UID = @UID
	SELECT 0 AS ERRCODE
	RETURN
END
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spPointProc]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spPointProc]
	@UID int, -- ??? UID
	@QTY int,  -- ??? ????
	@KIND int = 1 -- ?? ??? ??
AS
SET NOCOUNT ON
-- ?? ??? ??? ??? ??
DECLARE @ID varchar(20)
SELECT @ID = account FROM usertbl WHERE uid = @UID
DECLARE @LOGKIND int
SELECT @LOGKIND = @KIND + 100;
DECLARE @POINT int
DECLARE @START int
DECLARE @END int
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
BEGIN TRANSACTION
-------------------------------------------------------------------------
-- ??? ?? ??: 
-- ????? ????? ???? ????? ??? ???? ??????? ??
-------------------------------------------------------------------------
SELECT @POINT = Point, @START = StartDay, @END = EndDay FROM cardtbl WHERE (uid = @UID) AND (Kind BETWEEN 1 AND 10)
IF @Point IS NULL
BEGIN
	SELECT 11 AS errcode, 1 AS type, N'??? ?? ???? ??' AS comment
	ROLLBACK TRANSACTION
	RETURN 11 -- ??? ?? ???? ??
END
ELSE IF @POINT <= 0
BEGIN
	SELECT 12 AS errcode, 1 AS type, N'?? ???? ??? ?????' AS comment
	ROLLBACK TRANSACTION
	RETURN 12 -- ?? ??? ??? ?????
END
ELSE IF @POINT > 0 AND @START = 0 AND @END = 0
BEGIN
	-- ?? ??? ??
	IF @POINT >= @QTY
	BEGIN
		-- ?? ???? ??
		INSERT INTO logtbl (uid, account, logtime, logtype, qty)
			VALUES (@UID, @ID, GETDATE(), @LOGKIND, @QTY)
		-- ??? ??
		UPDATE cardtbl
		SET Point = @Point - @QTY WHERE uid = @UID AND (Kind BETWEEN 1 AND 10)
		SELECT 0 AS errcode, 1 AS type, @QTY AS comment
		COMMIT TRANSACTION
		RETURN 0 -- ????
	END
	ELSE
	BEGIN
		SELECT 13 AS errcode, 1 AS type, N'?? ??? ??' AS comment
		ROLLBACK TRANSACTION
		RETURN 13 -- ?? ??? ??
	END
END
ELSE IF @POINT > 0 AND @START > 0 AND @END > 0
BEGIN
	-- ???? ?? ??? ??
	DECLARE @STARTDATE smalldatetime
	DECLARE @ENDDATE smalldatetime
	DECLARE @NOW smalldatetime
	SELECT @STARTDATE = STR(@START)
	SELECT @ENDDATE = STR(@END)
	SELECT @NOW = GETDATE()
	IF @STARTDATE <= @NOW AND @NOW <= @ENDDATE + 1
	BEGIN
		-- ????
		IF @POINT >= @QTY
		BEGIN
			-- ?? ???? ??
			INSERT INTO logtbl (uid, account, logtime, logtype, qty)
				VALUES (@UID, @ID, GETDATE(), @LOGKIND, @QTY)
			-- ??? ??
			UPDATE cardtbl
			SET Point = @Point - @QTY WHERE uid = @UID AND (Kind BETWEEN 1 AND 10)
			SELECT 0 AS errcode, 1 AS type, @QTY AS comment
			COMMIT TRANSACTION
			RETURN 0 -- ????
		END
		ELSE
		BEGIN
			SELECT 13 AS errcode, 1 AS type, N'?? ??? ??' AS comment
			ROLLBACK TRANSACTION
			RETURN 13 -- ?? ??? ??
		END
	END
	ELSE
	BEGIN
		-- ???? ??
		SELECT 14 AS errcode, 1 AS type, N'???? ??' AS comment
		ROLLBACK TRANSACTION
		RETURN 14 -- ???? ??
	END
END
ELSE
BEGIN
	SELECT 19 AS errcode, 1 AS type, N'??? ?? ??' AS comment
	ROLLBACK TRANSACTION
	RETURN 19 -- ??? ?? ??
END



GO
/****** Object:  StoredProcedure [dbo].[spPointProcUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spPointProcUID]
	@UID int, -- ??? UID
	@QTY int,  -- ??? ????
	@KIND int = 1 -- ?? ??? ??
AS
SET NOCOUNT ON
-- ?? ??? ??? ??? ??
DECLARE @ID varchar(20)
SELECT @ID = account FROM usertbl WHERE uid = @UID
DECLARE @LOGKIND int
SELECT @LOGKIND = @KIND + 100;
DECLARE @POINT int
DECLARE @START int
DECLARE @END int
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
BEGIN TRANSACTION
-------------------------------------------------------------------------
-- ??? ?? ??: 
-- ????? ????? ???? ????? ??? ???? ??????? ??
-------------------------------------------------------------------------
SELECT @POINT = Point, @START = StartDay, @END = EndDay FROM cardtbl WHERE (uid = @UID) AND (Kind BETWEEN 1 AND 10)
IF @Point IS NULL
BEGIN
	SELECT 11 AS errcode, 1 AS type, @UID AS uid, N'??? ?? ???? ??' AS comment
	ROLLBACK TRANSACTION
	RETURN 11 -- ??? ?? ???? ??
END
ELSE IF @POINT <= 0
BEGIN
	SELECT 12 AS errcode, 1 AS type, @UID AS uid, N'?? ???? ??? ?????' AS comment
	ROLLBACK TRANSACTION
	RETURN 12 -- ?? ??? ??? ?????
END
ELSE IF @POINT > 0 AND @START = 0 AND @END = 0
BEGIN
	-- ?? ??? ??
	IF @POINT >= @QTY
	BEGIN
		-- ?? ???? ??
		INSERT INTO logtbl (uid, account, logtime, logtype, qty)
			VALUES (@UID, @ID, GETDATE(), @LOGKIND, @QTY)
		-- ??? ??
		UPDATE cardtbl
		SET Point = @Point - @QTY WHERE uid = @UID AND (Kind BETWEEN 1 AND 10)
		SELECT 0 AS errcode, 1 AS type, @UID AS uid, @QTY AS comment
		COMMIT TRANSACTION
		RETURN 0 -- ????
	END
	ELSE
	BEGIN
		SELECT 13 AS errcode, 1 AS type, @UID AS uid, N'?? ??? ??' AS comment
		ROLLBACK TRANSACTION
		RETURN 13 -- ?? ??? ??
	END
END
ELSE IF @POINT > 0 AND @START > 0 AND @END > 0
BEGIN
	-- ???? ?? ??? ??
	DECLARE @STARTDATE smalldatetime
	DECLARE @ENDDATE smalldatetime
	DECLARE @NOW smalldatetime
	SELECT @STARTDATE = STR(@START)
	SELECT @ENDDATE = STR(@END)
	SELECT @NOW = GETDATE()
	IF @STARTDATE <= @NOW AND @NOW <= @ENDDATE + 1
	BEGIN
		-- ????
		IF @POINT >= @QTY
		BEGIN
			-- ?? ???? ??
			INSERT INTO logtbl (uid, account, logtime, logtype, qty)
				VALUES (@UID, @ID, GETDATE(), @LOGKIND, @QTY)
			-- ??? ??
			UPDATE cardtbl
			SET Point = @Point - @QTY WHERE uid = @UID AND (Kind BETWEEN 1 AND 10)
			SELECT 0 AS errcode, 1 AS type, @UID AS uid, @QTY AS comment
			COMMIT TRANSACTION
			RETURN 0 -- ????
		END
		ELSE
		BEGIN
			SELECT 13 AS errcode, 1 AS type, @UID AS uid, N'?? ??? ??' AS comment
			ROLLBACK TRANSACTION
			RETURN 13 -- ?? ??? ??
		END
	END
	ELSE
	BEGIN
		-- ???? ??
		SELECT 14 AS errcode, 1 AS type, @UID AS uid, N'???? ??' AS comment
		ROLLBACK TRANSACTION
		RETURN 14 -- ???? ??
	END
END
ELSE
BEGIN
	SELECT 19 AS errcode, 1 AS type, @UID AS uid, N'??? ?? ??' AS comment
	ROLLBACK TRANSACTION
	RETURN 19 -- ??? ?? ??
END



GO
/****** Object:  StoredProcedure [dbo].[spRCreditMonth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spRCreditMonth]
	@UID int,
	@CHECKDAY int
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @COUNT int
DECLARE @SDAY int
DECLARE @EDAY int
SELECT @SDAY = STARTDAY,@EDAY = ENDDAY FROM CARDTBL WHERE UID = @UID AND KIND = 21
DECLARE @SEL int
DECLARE @REGIDATE int
SET @REGIDATE = dbo.fnMakeType(GETDATE())	
SET @SEL = dbo.fnCheckDate(@SDAY,@EDAY,GETDATE())
IF @SEL = 1
BEGIN
	-- ?? ????? ?? ???
	DECLARE @PLUSDAY smalldatetime
	DECLARE @ADDTIME int
	SET @PLUSDAY = STR(@EDAY)
	SET @ADDTIME = dbo.fnMakeType(@PLUSDAY+@CHECKDAY)
	UPDATE CARDTBL SET ENDDAY = @ADDTIME WHERE UID = @UID AND KIND = 21
	SELECT 0 AS ERRCODE,@ADDTIME AS ADDTIME,'ADD 30' AS COMMENT,@SDAY AS SDAY,@EDAY AS EDAY
	RETURN
END
ELSE
BEGIN
	IF @SEL = 3
	BEGIN
		-- ????? ?? ?? ???
		DECLARE @STARTDAY int
		DECLARE @ENDDAY int
		DECLARE @CURTIME smalldatetime
		SET @CURTIME = GETDATE()
		SET @STARTDAY = dbo.fnMakeType(@CURTIME)
		SET @ENDDAY = dbo.fnMakeType(@CURTIME+@CHECKDAY)
		UPDATE CARDTBL SET STARTDAY = @STARTDAY,ENDDAY = @ENDDAY WHERE UID = @UID AND KIND = 21
		SELECT 1 AS ERRCODE,@STARTDAY AS STARTDAY,@ENDDAY AS ENDDAY,'REGIST NOW' AS COMMNET
		RETURN
	END
	ELSE
	BEGIN
		-- ?? ?? ??
		SELECT 99 AS ERRCODE,'UNKNOWN ERROR' AS COMMENT
		RETURN
	END
END



GO
/****** Object:  StoredProcedure [dbo].[spRegiMonth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO


CREATE PROC [dbo].[spRegiMonth]
	@ACCOUNT varchar(10),
	@PASSWD varchar(30)
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @UID int
SELECT @UID=uid FROM usertbl where account = @account AND passwd = @passwd
IF @UID is NULL
BEGIN
	-- ??? ???? ?? ?? ??!!
	SELECT 2 AS ERRCODE
	RETURN 
END
ELSE
BEGIN
	DECLARE @POINT int
	SELECT @POINT = POINT FROM CARDTBL WHERE UID = @UID AND KIND < 20
	IF @POINT IS NULL
	BEGIN
		-- ?? ???? ???? ?? ??? ???.
		SELECT 1 AS ERRCODE,@UID AS UID
		RETURN
	END
	ELSE
	BEGIN
		-- ???? ???
		SELECT 0 AS ERRCODE,@POINT AS POINT,@UID AS UID
	END
END
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spRegiPoint]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** ??: ?? ???? dbo.spRegiPoint    ???? ??: 2002-03-19 ?? 5:30:44 ******/
CREATE PROC [dbo].[spRegiPoint]
	@UID int,
	@KIND int,
	@ID varchar(20),
	@RETURN int OUTPUT,
	@RPOINT int OUTPUT
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @INDEX int
DECLARE @POINT int
SELECT @INDEX = [INDEX],@POINT = POINT FROM CARDTBL WHERE UID = @UID AND KIND = @KIND
IF @INDEX is NULL
BEGIN
	-- ??? ?? ???
	UPDATE CARDTBL SET UID = @UID WHERE ID = @ID
	SELECT @RETURN = 0
	RETURN 0
END
ELSE
BEGIN
	-- ?? ?? ???
	UPDATE CARDTBL SET POINT = POINT + @POINT,UID = @UID WHERE ID = @ID
	DELETE CARDTBL WHERE [INDEX] = @INDEX
	SELECT @RETURN = 1,@RPOINT = @POINT
	RETURN 0
END
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spRepeatAuth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spRepeatAuth]
	@ID varchar(20),
	@KIND int,	-- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
	@TYPE int = 5	-- ????, 1:???, 2:??, 5:???
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @QTY int
DECLARE @START smalldatetime
DECLARE @END smalldatetime
DECLARE @NOW smalldatetime
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 2 AS type, N'??? ??? ???? ??? ??? ??' AS comment
	RETURN 1 -- ??? ??? ???? ??? ??? ??
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 2 AS type, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
IF @TYPE = 5
BEGIN
-- ??? ?? ?????? ????.
DECLARE @POINT int
DECLARE @NEWKIND int
SELECT @NEWKIND = @KIND + 30;
SELECT @POINT = Point FROM cardtbl WHERE uid = @UID AND Kind = @NEWKIND AND Kind > 50
IF @Point IS NULL
BEGIN
	--SELECT 51 AS errcode, 5 AS type, N'??? ?? ???? ??' AS comment
	--RETURN 51 -- ??? ?? ???? ??
	EXEC spRepeatAuth @ID, @KIND, 2
	RETURN
	
END
ELSE
BEGIN
	-- ??? ?? ???
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spServiceProc @UID, @QTY, @KIND 
	RETURN 
END
END -- ??? ??? ?? ?
-------------------------------------------------------------------------
-- ?? ??? ??
-------------------------------------------------------------------------
ELSE IF @TYPE = 2
BEGIN
-- ???? ?????? ???? ???? ????? ???
SELECT @START = STR(StartDay), @END = STR(EndDay) FROM cardtbl WHERE uid = @UID AND Kind = @KIND AND Kind >= 21 AND Kind <= 50
SELECT @NOW = GETDATE()
IF (@START IS NULL) OR (@END IS NULL)
BEGIN
	-- ???? ???? ??, ??? ???? ??
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spPointProc @UID, @QTY, @KIND
	RETURN 
END
ELSE IF @START > @NOW
BEGIN
	SELECT 21 AS errcode, 2 AS type, N'?? ????? ???? ??' AS comment
	RETURN 21 -- ?? ????? ???? ??
END
ELSE IF @NOW > @END+1
BEGIN
	-- ?? ?? ?? ?? ??
	DELETE cardtbl WHERE uid = @UID AND Kind = @KIND AND Kind >= 21 AND Kind <= 50
	-- ?? ???? ??
	INSERT INTO logtbl (uid, account, logtime, logtype, qty)
		VALUES (@UID, @ID, GETDATE(), @KIND+500, 0)
	SELECT 22 AS errcode, 2 AS type, N'?? ???? ??' AS comment
	RETURN 22 -- ?? ???? ??
END
ELSE IF @START <= @NOW AND @NOW <= @END+1
BEGIN
	-- ?? ???? ??
	--INSERT INTO logtbl (uid, account, logtime, logtype, qty)
	--	VALUES (@UID, @ID, GETDATE(), @KIND, 0)
	-- ?? ?? ??? ??
	SELECT 0 AS errcode, 2 AS type, @END+1 AS comment
	RETURN 0
END
ELSE
BEGIN
	SELECT 29 AS errcode, 2 AS type, N'?? ?? ??' AS comment
	RETURN 29 -- ?? ?? ??
END
END -- ?? ??? ?? ?
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
ELSE IF @TYPE = 1
BEGIN
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 1 AS type, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spPointProc @UID, @QTY, @KIND
	RETURN 
END -- ??? ??? ?? ?
ELSE
BEGIN
	SELECT 9 AS errcode, 2 AS type, N'??? ?? ??' AS comment
	RETURN 9 -- ??? ?? ??
END
SELECT 99 AS errcode, 2 AS type, N'?? ?? ??' AS comment
RETURN 99 -- ?? ?? ??



GO
/****** Object:  StoredProcedure [dbo].[spRepeatAuthMyth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spRepeatAuthMyth]
	@UID int
AS
SET NOCOUNT ON
DECLARE @ID varchar(20)
SELECT @ID = account FROM usertbl WHERE uid = @UID
IF @ID IS NULL
BEGIN
	SELECT 8 AS errcode, 0 AS type, @UID AS uid, N'???? UID' AS comment
	RETURN 8 -- ???? UID
END
DECLARE @NOW datetime
DECLARE @SERVICEEND datetime
SELECT @NOW = GETDATE()
SELECT @SERVICEEND = '20030101 06:00'
IF @NOW < @SERVICEEND
BEGIN
	-- ??? ?? ?
	EXEC spServiceRepeatAuthUID @ID, 23
	
END
ELSE
BEGIN
	-- ??? ?? ??
	EXEC spRepeatAuthUID @ID, 23
END
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spRepeatAuthTank]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spRepeatAuthTank]
	@UID int
AS
SET NOCOUNT ON
DECLARE @ID varchar(20)
SELECT @ID = account FROM usertbl WHERE uid = @UID
IF @ID IS NULL
BEGIN
	SELECT 8 AS errcode, 0 AS type, @UID AS uid, N'???? UID' AS comment
	RETURN 8 -- ???? UID
END
DECLARE @NOW datetime
DECLARE @SERVICEEND datetime
SELECT @NOW = GETDATE()
SELECT @SERVICEEND = '20030101 06:00'
IF @NOW < @SERVICEEND
BEGIN
	-- ??? ?? ?
	EXEC spServiceRepeatAuth @ID, 22
	
END
ELSE
BEGIN
	-- ??? ?? ??
	EXEC spRepeatAuth @ID, 22
END
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spRepeatAuthUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spRepeatAuthUID]
	@ID varchar(20),
	@KIND int,	-- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
	@TYPE int = 5	-- ????, 1:???, 2:??, 5:???
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @QTY int
DECLARE @START smalldatetime
DECLARE @END smalldatetime
DECLARE @NOW smalldatetime
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 2 AS type, @UID AS uid, N'??? ??? ???? ??? ??? ??' AS comment
	RETURN 1 -- ??? ??? ???? ??? ??? ??
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 2 AS type, @UID AS uid, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
IF @TYPE = 5
BEGIN
-- ??? ?? ?????? ????.
DECLARE @POINT int
DECLARE @NEWKIND int
SELECT @NEWKIND = @KIND + 30;
SELECT @POINT = Point FROM cardtbl WHERE uid = @UID AND Kind = @NEWKIND AND Kind > 50
IF @Point IS NULL
BEGIN
	--SELECT 51 AS errcode, 5 AS type, N'??? ?? ???? ??' AS comment
	--RETURN 51 -- ??? ?? ???? ??
	EXEC spRepeatAuthUID @ID, @KIND, 2
	RETURN
	
END
ELSE
BEGIN
	-- ??? ?? ???
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, @UID AS uid, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spServiceProcUID @UID, @QTY, @KIND 
	RETURN 
END
END -- ??? ??? ?? ?
-------------------------------------------------------------------------
-- ?? ??? ??
-------------------------------------------------------------------------
ELSE IF @TYPE = 2
BEGIN
-- ???? ?????? ???? ???? ????? ???
SELECT @START = STR(StartDay), @END = STR(EndDay) FROM cardtbl WHERE uid = @UID AND Kind = @KIND AND Kind >= 21 AND Kind <= 50
SELECT @NOW = GETDATE()
IF (@START IS NULL) OR (@END IS NULL)
BEGIN
	-- ???? ???? ??, ??? ???? ??
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, @UID AS uid, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spPointProcUID @UID, @QTY, @KIND
	RETURN 
END
ELSE IF @START > @NOW
BEGIN
	SELECT 21 AS errcode, 2 AS type, @UID AS uid, N'?? ????? ???? ??' AS comment
	RETURN 21 -- ?? ????? ???? ??
END
ELSE IF @NOW > @END+1
BEGIN
	-- ?? ?? ?? ?? ??
	DELETE cardtbl WHERE uid = @UID AND Kind = @KIND AND Kind >= 21 AND Kind <= 50
	-- ?? ???? ??
	INSERT INTO logtbl (uid, account, logtime, logtype, qty)
		VALUES (@UID, @ID, GETDATE(), @KIND+500, 0)
	SELECT 22 AS errcode, 2 AS type, @UID AS uid, N'?? ???? ??' AS comment
	RETURN 22 -- ?? ???? ??
END
ELSE IF @START <= @NOW AND @NOW <= @END+1
BEGIN
	-- ?? ???? ??
	--INSERT INTO logtbl (uid, account, logtime, logtype, qty)
	--	VALUES (@UID, @ID, GETDATE(), @KIND, 0)
	-- ?? ?? ??? ??
	SELECT 0 AS errcode, 2 AS type, @UID AS uid, @END+1 AS comment
	RETURN 0
END
ELSE
BEGIN
	SELECT 29 AS errcode, 2 AS type, @UID AS uid, N'?? ?? ??' AS comment
	RETURN 29 -- ?? ?? ??
END
END -- ?? ??? ?? ?
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
ELSE IF @TYPE = 1
BEGIN
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 1 AS type, @UID AS uid, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spPointProcUID @UID, @QTY, @KIND
	RETURN 
END -- ??? ??? ?? ?
ELSE
BEGIN
	SELECT 9 AS errcode, 2 AS type, @UID AS uid, N'??? ?? ??' AS comment
	RETURN 9 -- ??? ?? ??
END
SELECT 99 AS errcode, 2 AS type, @UID AS uid, N'?? ?? ??' AS comment
RETURN 99 -- ?? ?? ??



GO
/****** Object:  StoredProcedure [dbo].[spSerialRegi]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** ??: ?? ???? dbo.spSerialRegi    ???? ??: 2002-03-19 ?? 5:30:44 ******/
CREATE PROC [dbo].[spSerialRegi]
	@ID varchar(20),
	@ACCOUNT varchar(20),
	@PASSWD varchar(30)
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @UID int
SELECT @UID=UID FROM USERTBL where ACCOUNT = @ACCOUNT AND PASSWD = @PASSWD
IF @UID is NULL
BEGIN
	-- ??? ???? ?? ?? ??!!
	SELECT 2 AS ERRCODE
	RETURN 
END
ELSE
BEGIN
	DECLARE @INDEX int	-- ???? ?? ??? ?? ??
	DECLARE @SUID int	-- ?? ???? ??? UID? ????? ??? ?? ?? ??
	DECLARE @NPOINT int	-- ?????? ???
	DECLARE @KIND int	-- ?? ???? KIND
	SELECT @INDEX = [INDEX],@SUID = UID,@NPOINT = POINT,@KIND = KIND FROM CARDTBL WHERE ID = @ID 
	IF @INDEX IS NULL
	BEGIN
		-- ???? ?? ?? ???.
		SELECT 3 AS ERRCODE
		RETURN
	END
	ELSE
	BEGIN
		IF @SUID IS NULL
		BEGIN
			IF @KIND < 70
			BEGIN
				-- 1~20??? ??? ??? 50??? ??? ??? ???? ??
				DECLARE @RETURN int
				DECLARE @RPOINT int
				DECLARE @REGIDATE int
				EXEC spRegiPoint @UID,@KIND,@ID, @RETURN OUTPUT,@RPOINT OUTPUT
				SET @REGIDATE = dbo.fnMakeType(GETDATE())
				INSERT INTO REGISERIAL (REGISERIAL,REGIDATE,REGIID,REGITYPE) VALUES (@ID,@REGIDATE,@ACCOUNT,@RETURN)
				SELECT @RETURN AS ERRCODE,@RPOINT AS ADDPOINT,@NPOINT AS POINT,@KIND AS KIND
				RETURN
			END
			ELSE
			BEGIN
				IF @KIND = 80
				BEGIN
					-- ??? ?? ????? ???? ???? ??
					SELECT 8 AS ERRCODE,@UID AS UID
					RETURN
				END
				ELSE
				BEGIN
					IF @KIND > 150
					BEGIN
						-- ??? ??? ??? ???? ??
						SELECT 7 AS ERRCODE,@UID AS UID,@KIND AS KIND,@NPOINT AS POINT
						RETURN
					END
					ELSE
					BEGIN
						SELECT 99 AS ERRCODE,'???? KIND' AS COMMNET
						RETURN
					END
				END				
			END
		END
		ELSE
		BEGIN
			SELECT 4 AS ERRCODE
			RETURN
		END
	END
END
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spServiceCheckAuth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spServiceCheckAuth]
	@ID varchar(20),
	@PASSWD varchar(30),
	@KIND int,	-- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
	@TYPE int = 5	-- ????, 1:???, 2:??, 5:???
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @QTY int
DECLARE @START smalldatetime
DECLARE @END smalldatetime
DECLARE @NOW smalldatetime
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID AND passwd = @PASSWD
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 2 AS type, N'??? ??? ???? ??? ??? ??' AS comment
	RETURN 1 -- ??? ??? ???? ??? ??? ??
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 2 AS type, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
IF @TYPE = 5
BEGIN
-- ??? ?? ?????? ????.
DECLARE @POINT int
DECLARE @NEWKIND int
SELECT @NEWKIND = @KIND + 30;
SELECT @POINT = Point FROM cardtbl WHERE uid = @UID AND Kind = @NEWKIND AND Kind > 50
IF @Point IS NULL
BEGIN
	SELECT 51 AS errcode, 5 AS type, N'??? ?? ???? ??' AS comment
	RETURN 51 -- ??? ??? ?? ???? ??
	
END
ELSE
BEGIN
	-- ??? ?? ???
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spCheckServiceProc @UID, @QTY, @KIND 
	RETURN 
END
END -- ??? ??? ?? ?
SELECT 99 AS errcode, 2 AS type, N'?? ?? ??' AS comment
RETURN 99 -- ?? ?? ??



GO
/****** Object:  StoredProcedure [dbo].[spServiceCheckAuthUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spServiceCheckAuthUID]
	@ID varchar(20),
	@PASSWD varchar(30),
	@KIND int,	-- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
	@TYPE int = 5	-- ????, 1:???, 2:??, 5:???
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @QTY int
DECLARE @START smalldatetime
DECLARE @END smalldatetime
DECLARE @NOW smalldatetime
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID AND passwd = @PASSWD
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 2 AS type, @UID AS uid, N'??? ??? ???? ??? ??? ??' AS comment
	RETURN 1 -- ??? ??? ???? ??? ??? ??
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 2 AS type, @UID AS uid, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
IF @TYPE = 5
BEGIN
-- ??? ?? ?????? ????.
DECLARE @POINT int
DECLARE @NEWKIND int
SELECT @NEWKIND = @KIND + 30;
SELECT @POINT = Point FROM cardtbl WHERE uid = @UID AND Kind = @NEWKIND AND Kind > 50
IF @Point IS NULL
BEGIN
	SELECT 51 AS errcode, 5 AS type, @UID AS uid, N'??? ?? ???? ??' AS comment
	RETURN 51 -- ??? ??? ?? ???? ??
	
END
ELSE
BEGIN
	-- ??? ?? ???
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, @UID AS uid, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spCheckServiceProcUID @UID, @QTY, @KIND 
	RETURN 
END
END -- ??? ??? ?? ?
SELECT 99 AS errcode, 2 AS type, @UID AS uid, N'?? ?? ??' AS comment
RETURN 99 -- ?? ?? ??



GO
/****** Object:  StoredProcedure [dbo].[spServiceLoginAuth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spServiceLoginAuth]
	@ID varchar(20),
	@PASSWD varchar(30),
	@KIND int,	-- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
	@TYPE int = 5	-- ????, 1:???, 2:??, 5:???
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @QTY int
DECLARE @START smalldatetime
DECLARE @END smalldatetime
DECLARE @NOW smalldatetime
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID AND passwd = @PASSWD
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 2 AS type, N'??? ??? ???? ??? ??? ??' AS comment
	RETURN 1 -- ??? ??? ???? ??? ??? ??
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 2 AS type, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
IF @TYPE = 5
BEGIN
-- ??? ?? ?????? ????.
DECLARE @POINT int
DECLARE @NEWKIND int
SELECT @NEWKIND = @KIND + 30;
SELECT @POINT = Point FROM cardtbl WHERE uid = @UID AND Kind = @NEWKIND AND Kind > 50
IF @Point IS NULL
BEGIN
	SELECT 51 AS errcode, 5 AS type, N'??? ??? ?? ???? ??' AS comment
	RETURN 51 -- ??? ?? ???? ??
	
END
ELSE
BEGIN
	-- ??? ?? ???
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spServiceProc @UID, @QTY, @KIND 
	RETURN 
END
END -- ??? ??? ?? ?
SELECT 59 AS errcode, 5 AS type, N'??? ??? ?? ??' AS comment
RETURN 59 -- ??? ?? ???? ??



GO
/****** Object:  StoredProcedure [dbo].[spServiceLoginAuthUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spServiceLoginAuthUID]
	@ID varchar(20),
	@PASSWD varchar(30),
	@KIND int,	-- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
	@TYPE int = 5	-- ????, 1:???, 2:??, 5:???
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @QTY int
DECLARE @START smalldatetime
DECLARE @END smalldatetime
DECLARE @NOW smalldatetime
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID AND passwd = @PASSWD
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 2 AS type, @UID AS uid, N'??? ??? ???? ??? ??? ??' AS comment
	RETURN 1 -- ??? ??? ???? ??? ??? ??
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 2 AS type, @UID AS uid, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
IF @TYPE = 5
BEGIN
-- ??? ?? ?????? ????.
DECLARE @POINT int
DECLARE @NEWKIND int
SELECT @NEWKIND = @KIND + 30;
SELECT @POINT = Point FROM cardtbl WHERE uid = @UID AND Kind = @NEWKIND AND Kind > 50
IF @Point IS NULL
BEGIN
	SELECT 51 AS errcode, 5 AS type, @UID AS uid, N'??? ??? ?? ???? ??' AS comment
	RETURN 51 -- ??? ?? ???? ??
	
END
ELSE
BEGIN
	-- ??? ?? ???
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, @UID AS uid, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spServiceProcUID @UID, @QTY, @KIND 
	RETURN 
END
END -- ??? ??? ?? ?
SELECT 59 AS errcode, 5 AS type, @UID AS uid, N'??? ??? ?? ??' AS comment
RETURN 59 -- ??? ?? ???? ??



GO
/****** Object:  StoredProcedure [dbo].[spServicePointAuth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spServicePointAuth]
	@ID varchar(20),
	@PTYPE int = 1,	-- ??? ??, pqtytbl? ?? ?? ?? ~= Kind
	@PQTY int = 0	-- @PTYPE? 0? ?? ? ???? ????? ??
AS
SET NOCOUNT ON
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 1 AS type, N'??? ??? ???? ??' AS comment
	RETURN 1 -- ??? ??? ???? ?? 
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 1 AS type, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
DECLARE @NEWKIND int
-- ?? ???? ??
DECLARE @QTY int
IF @PTYPE = 0
BEGIN
	SELECT @QTY = @PQTY
	SELECT @NEWKIND = 100;
END
ELSE
BEGIN
	
	-- pqtytbl ?? @PTYPE? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @PTYPE
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 1 AS type, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	SELECT @NEWKIND = @PTYPE + 30;
END
-- ??? ?? ????? ?? ??? ?? ?????? ????
-- ??? ????? ????.
DECLARE @COUNT int
-- ??? ??? ??? ???? ??? ??
SELECT @COUNT = COUNT(*) FROM cardtbl WHERE uid = @UID AND (Kind = @NEWKIND) AND (Kind > 50)
IF @COUNT > 0
BEGIN
	-- ??? ?? ??? ????
	EXEC spServiceProc @UID, @QTY, @PTYPE
	RETURN
END
ELSE
BEGIN
	SELECT 51 AS errcode, 5 AS type, N'??? ?? ???? ??' AS comment
	RETURN 51 -- ??? ??? ?? ???? ??
END



GO
/****** Object:  StoredProcedure [dbo].[spServicePointAuthUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spServicePointAuthUID]
	@ID varchar(20),
	@PTYPE int = 1,	-- ??? ??, pqtytbl? ?? ?? ?? ~= Kind
	@PQTY int = 0	-- @PTYPE? 0? ?? ? ???? ????? ??
AS
SET NOCOUNT ON
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 1 AS type, @UID AS uid, N'??? ??? ???? ??' AS comment
	RETURN 1 -- ??? ??? ???? ?? 
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 1 AS type, @UID AS uid, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
DECLARE @NEWKIND int
-- ?? ???? ??
DECLARE @QTY int
IF @PTYPE = 0
BEGIN
	SELECT @QTY = @PQTY
	SELECT @NEWKIND = 100;
END
ELSE
BEGIN
	
	-- pqtytbl ?? @PTYPE? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @PTYPE
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 1 AS type, @UID AS uid, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	SELECT @NEWKIND = @PTYPE + 30;
END
-- ??? ?? ????? ?? ??? ?? ?????? ????
-- ??? ????? ????.
DECLARE @COUNT int
-- ??? ??? ??? ???? ??? ??
SELECT @COUNT = COUNT(*) FROM cardtbl WHERE uid = @UID AND (Kind = @NEWKIND) AND (Kind > 50)
IF @COUNT > 0
BEGIN
	-- ??? ?? ??? ????
	EXEC spServiceProcUID @UID, @QTY, @PTYPE
	RETURN
END
ELSE
BEGIN
	SELECT 51 AS errcode, 5 AS type, @UID AS uid, N'??? ?? ???? ??' AS comment
	RETURN 51 -- ??? ??? ?? ???? ??
END



GO
/****** Object:  StoredProcedure [dbo].[spServiceProc]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spServiceProc]
	@UID int, -- ??? UID
	@QTY int	, -- ??? ????
	@KIND int -- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
AS
SET NOCOUNT ON
-- ?? ??? ??? ??? ??
DECLARE @ID varchar(20)
SELECT @ID = account FROM usertbl WHERE uid = @UID
-- ??? ?? Kind ??
DECLARE @NEWKIND int
SELECT @NEWKIND = @KIND + 30;
DECLARE @POINT int
DECLARE @START int
DECLARE @END int
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
BEGIN TRANSACTION
-------------------------------------------------------------------------
-- ??? ??? ?? ??: 
-- ??? ????? ????? ???? ????? ??? ???? ??????? ??
-------------------------------------------------------------------------
SELECT @POINT = Point, @START = StartDay, @END = EndDay FROM cardtbl WHERE (uid = @UID) AND (Kind = @NEWKIND) AND (Kind > 50)
IF @Point IS NULL
BEGIN
	SELECT 51 AS errcode, 5 AS type, N'??? ??? ?? ???? ??' AS comment
	ROLLBACK TRANSACTION
	RETURN 51 -- ??? ?? ???? ??
END
ELSE IF @POINT <= 0
BEGIN
	SELECT 52 AS errcode, 5 AS type, N'?? ???? ??? ?????' AS comment
	ROLLBACK TRANSACTION
	RETURN 52 -- ?? ??? ??? ?????
END
ELSE IF @POINT > 0 AND @START = 0 AND @END = 0
BEGIN
	-- ?? ??? ??
	IF @POINT >= @QTY
	BEGIN
		-- ?? ???? ??
		INSERT INTO logtbl (uid, account, logtime, logtype, qty)
			VALUES (@UID, @ID, GETDATE(), @NEWKIND, @QTY)
		-- ??? ??
		UPDATE cardtbl
		SET Point = @Point - @QTY WHERE uid = @UID AND (Kind = @NEWKIND) AND (Kind > 50)
		SELECT 0 AS errcode, 5 AS type, @QTY AS comment
		COMMIT TRANSACTION
		RETURN 0 -- ????
	END
	ELSE
	BEGIN
		SELECT 53 AS errcode, 5 AS type, N'?? ??? ??' AS comment
		ROLLBACK TRANSACTION
		RETURN 53 -- ?? ??? ??
	END
END
ELSE IF @POINT > 0 AND @START > 0 AND @END > 0
BEGIN
	-- ???? ?? ??? ??
	DECLARE @STARTDATE smalldatetime
	DECLARE @ENDDATE smalldatetime
	DECLARE @NOW smalldatetime
	SELECT @STARTDATE = STR(@START)
	SELECT @ENDDATE = STR(@END)
	SELECT @NOW = GETDATE()
	IF @STARTDATE <= @NOW AND @NOW <= @ENDDATE + 1
	BEGIN
		-- ????
		IF @POINT >= @QTY
		BEGIN
			-- ?? ???? ??
			INSERT INTO logtbl (uid, account, logtime, logtype, qty)
				VALUES (@UID, @ID, GETDATE(), @NEWKIND, @QTY)
			-- ??? ??
			UPDATE cardtbl
			SET Point = @Point - @QTY WHERE uid = @UID AND (Kind = @NEWKIND) AND (Kind > 50)
			SELECT 0 AS errcode, 5 AS type, @QTY AS comment
			COMMIT TRANSACTION
			RETURN 0 -- ????
		END
		ELSE
		BEGIN
			SELECT 53 AS errcode, 5 AS type, N'?? ??? ??' AS comment
			ROLLBACK TRANSACTION
			RETURN 53 -- ?? ??? ??
		END
	END
	ELSE
	BEGIN
		-- ???? ??
		SELECT 54 AS errcode, 5 AS type, N'???? ??' AS comment
		ROLLBACK TRANSACTION
		RETURN 54 -- ???? ??
	END
END
ELSE
BEGIN
	SELECT 59 AS errcode, 5 AS type, N'??? ??? ?? ??' AS comment
	ROLLBACK TRANSACTION
	RETURN 59 -- ??? ?? ??
END



GO
/****** Object:  StoredProcedure [dbo].[spServiceProcUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spServiceProcUID]
	@UID int, -- ??? UID
	@QTY int	, -- ??? ????
	@KIND int -- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
AS
SET NOCOUNT ON
-- ?? ??? ??? ??? ??
DECLARE @ID varchar(20)
SELECT @ID = account FROM usertbl WHERE uid = @UID
-- ??? ?? Kind ??
DECLARE @NEWKIND int
SELECT @NEWKIND = @KIND + 30;
DECLARE @POINT int
DECLARE @START int
DECLARE @END int
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
BEGIN TRANSACTION
-------------------------------------------------------------------------
-- ??? ??? ?? ??: 
-- ??? ????? ????? ???? ????? ??? ???? ??????? ??
-------------------------------------------------------------------------
SELECT @POINT = Point, @START = StartDay, @END = EndDay FROM cardtbl WHERE (uid = @UID) AND (Kind = @NEWKIND) AND (Kind > 50)
IF @Point IS NULL
BEGIN
	SELECT 51 AS errcode, 5 AS type, @UID AS uid, N'??? ??? ?? ???? ??' AS comment
	ROLLBACK TRANSACTION
	RETURN 51 -- ??? ?? ???? ??
END
ELSE IF @POINT <= 0
BEGIN
	SELECT 52 AS errcode, 5 AS type, @UID AS uid, N'?? ???? ??? ?????' AS comment
	ROLLBACK TRANSACTION
	RETURN 52 -- ?? ??? ??? ?????
END
ELSE IF @POINT > 0 AND @START = 0 AND @END = 0
BEGIN
	-- ?? ??? ??
	IF @POINT >= @QTY
	BEGIN
		-- ?? ???? ??
		INSERT INTO logtbl (uid, account, logtime, logtype, qty)
			VALUES (@UID, @ID, GETDATE(), @NEWKIND, @QTY)
		-- ??? ??
		UPDATE cardtbl
		SET Point = @Point - @QTY WHERE uid = @UID AND (Kind = @NEWKIND) AND (Kind > 50)
		SELECT 0 AS errcode, 5 AS type, @UID AS uid, @QTY AS comment
		COMMIT TRANSACTION
		RETURN 0 -- ????
	END
	ELSE
	BEGIN
		SELECT 53 AS errcode, 5 AS type, @UID AS uid, N'?? ??? ??' AS comment
		ROLLBACK TRANSACTION
		RETURN 53 -- ?? ??? ??
	END
END
ELSE IF @POINT > 0 AND @START > 0 AND @END > 0
BEGIN
	-- ???? ?? ??? ??
	DECLARE @STARTDATE smalldatetime
	DECLARE @ENDDATE smalldatetime
	DECLARE @NOW smalldatetime
	SELECT @STARTDATE = STR(@START)
	SELECT @ENDDATE = STR(@END)
	SELECT @NOW = GETDATE()
	IF @STARTDATE <= @NOW AND @NOW <= @ENDDATE + 1
	BEGIN
		-- ????
		IF @POINT >= @QTY
		BEGIN
			-- ?? ???? ??
			INSERT INTO logtbl (uid, account, logtime, logtype, qty)
				VALUES (@UID, @ID, GETDATE(), @NEWKIND, @QTY)
			-- ??? ??
			UPDATE cardtbl
			SET Point = @Point - @QTY WHERE uid = @UID AND (Kind = @NEWKIND) AND (Kind > 50)
			SELECT 0 AS errcode, 5 AS type, @UID AS uid, @QTY AS comment
			COMMIT TRANSACTION
			RETURN 0 -- ????
		END
		ELSE
		BEGIN
			SELECT 53 AS errcode, 5 AS type, @UID AS uid, N'?? ??? ??' AS comment
			ROLLBACK TRANSACTION
			RETURN 53 -- ?? ??? ??
		END
	END
	ELSE
	BEGIN
		-- ???? ??
		SELECT 54 AS errcode, 5 AS type, @UID AS uid, N'???? ??' AS comment
		ROLLBACK TRANSACTION
		RETURN 54 -- ???? ??
	END
END
ELSE
BEGIN
	SELECT 59 AS errcode, 5 AS type, @UID AS uid, N'??? ??? ?? ??' AS comment
	ROLLBACK TRANSACTION
	RETURN 59 -- ??? ?? ??
END



GO
/****** Object:  StoredProcedure [dbo].[spServiceRepeatAuth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spServiceRepeatAuth]
	@ID varchar(20),
	@KIND int,	-- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
	@TYPE int = 5	-- ????, 1:???, 2:??, 5:???
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @QTY int
DECLARE @START smalldatetime
DECLARE @END smalldatetime
DECLARE @NOW smalldatetime
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 2 AS type, N'??? ??? ???? ??? ??? ??' AS comment
	RETURN 1 -- ??? ??? ???? ??? ??? ??
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 2 AS type, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
IF @TYPE = 5
BEGIN
-- ??? ?? ?????? ????.
DECLARE @POINT int
DECLARE @NEWKIND int
SELECT @NEWKIND = @KIND + 30;
SELECT @POINT = Point FROM cardtbl WHERE uid = @UID AND Kind = @NEWKIND AND Kind > 50
IF @Point IS NULL
BEGIN
	SELECT 51 AS errcode, 5 AS type, N'??? ?? ???? ??' AS comment
	RETURN 51 -- ??? ?? ???? ??
	
END
ELSE
BEGIN
	-- ??? ?? ???
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spServiceProc @UID, @QTY, @KIND 
	RETURN 
END
END -- ??? ??? ?? ?
SELECT 99 AS errcode, 2 AS type, N'?? ?? ??' AS comment
RETURN 99 -- ?? ?? ??



GO
/****** Object:  StoredProcedure [dbo].[spServiceRepeatAuthUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spServiceRepeatAuthUID]
	@ID varchar(20),
	@KIND int,	-- Card or Game Kind, 1~10: ?????, 21~50: ? ?? ????, 51~: ? ?? ?????
	@TYPE int = 5	-- ????, 1:???, 2:??, 5:???
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @QTY int
DECLARE @START smalldatetime
DECLARE @END smalldatetime
DECLARE @NOW smalldatetime
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, 2 AS type, @UID AS uid, N'??? ??? ???? ??? ??? ??' AS comment
	RETURN 1 -- ??? ??? ???? ??? ??? ??
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, 2 AS type, @UID AS uid, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
-------------------------------------------------------------------------
-- ??? ??? ??
-------------------------------------------------------------------------
IF @TYPE = 5
BEGIN
-- ??? ?? ?????? ????.
DECLARE @POINT int
DECLARE @NEWKIND int
SELECT @NEWKIND = @KIND + 30;
SELECT @POINT = Point FROM cardtbl WHERE uid = @UID AND Kind = @NEWKIND AND Kind > 50
IF @Point IS NULL
BEGIN
	SELECT 51 AS errcode, 5 AS type, @UID AS uid, N'??? ?? ???? ??' AS comment
	RETURN 51 -- ??? ?? ???? ??
	
END
ELSE
BEGIN
	-- ??? ?? ???
	-- pqtytbl ?? @KIND? ?? ???? ??
	SELECT @QTY = pqty FROM pqtytbl WHERE kind = @KIND
	IF @QTY IS NULL
	BEGIN
		SELECT 3 AS errcode, 2 AS type, @UID AS uid, N'???? ????' AS comment
		RETURN 3 -- ???? ????
	END
	EXEC spServiceProcUID @UID, @QTY, @KIND 
	RETURN 
END
END -- ??? ??? ?? ?
SELECT 99 AS errcode, 2 AS type, @UID AS uid, N'?? ?? ??' AS comment
RETURN 99 -- ?? ?? ??



GO
/****** Object:  StoredProcedure [dbo].[spShowMonthSN]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO


CREATE PROC [dbo].[spShowMonthSN]
	@ACCOUNT varchar(20),
	@KIND int
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @UID int
DECLARE @INDEX int
SELECT @UID = UID FROM USERTBL WHERE ACCOUNT = @ACCOUNT
SELECT @INDEX = [INDEX] FROM CARDTBL WHERE UID = @UID AND KIND = @KIND
IF @INDEX IS NULL
BEGIN
	-- ??? ???? ?? ?? ???
	SELECT 1 AS CREATESN
	RETURN
END
ELSE
BEGIN
	-- ???? ?? ??? ???
	SELECT 0 AS CREATESN
	RETURN
END
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spShowRegi]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** ??: ?? ???? dbo.spShowRegi    ???? ??: 2002-03-19 ?? 5:30:44 ******/
CREATE PROC [dbo].[spShowRegi]
	@UID int
AS
SET NOCOUNT ON
-- DECLARE
SELECT KIND,STARTDAY,ENDDAY FROM CARDTBL WHERE UID = @UID AND KIND >20 AND KIND < 50 ORDER BY KIND
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spTestServer]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO


CREATE PROC [dbo].[spTestServer]
	@ID		varchar(20),
	@PASSWD	varchar(30) = NULL,
	@UID		int OUTPUT
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
DECLARE @ERROR int
DECLARE @CNT_USER int
IF @PASSWD IS NOT NULL
BEGIN
	SELECT @CNT_USER = COUNT(*) FROM usertbl
	WHERE account = @ID AND passwd = @PASSWD
END
ELSE
BEGIN
	SELECT @CNT_USER = COUNT(*) FROM usertbl
	WHERE account = @ID
END
IF @CNT_USER <> 1
BEGIN
	SELECT @UID = 0
	RETURN 1 -- ??? ?? ??
END
SELECT @UID = uid FROM usertbl
WHERE account = @ID

RETURN 0 -- ??? ?? ??


GO
/****** Object:  StoredProcedure [dbo].[spTotalPoint]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spTotalPoint]
	@ACCOUNT varchar(20)
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @UID int
SELECT @UID = UID FROM USERTBL WHERE ACCOUNT = @ACCOUNT
IF @UID IS NULL
BEGIN
	SELECT 1 AS ERRCODE
	RETURN
END
ELSE
BEGIN
	SELECT * FROM CARDTBL WHERE UID = @UID ORDER BY KIND
	RETURN
END
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spUpdateLastloginID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spUpdateLastloginID]
	@ID varchar(20)
AS
SET NOCOUNT ON
UPDATE usertbl
SET lastlogin = GETDATE()
WHERE account = @ID
RETURN 0



GO
/****** Object:  StoredProcedure [dbo].[spUpdateLastloginUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spUpdateLastloginUID]
	@UID int
AS
SET NOCOUNT ON
UPDATE usertbl
SET lastlogin = GETDATE()
WHERE uid = @UID
RETURN 0



GO
/****** Object:  StoredProcedure [dbo].[spUpdateUserProfile]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO


CREATE PROCEDURE [dbo].[spUpdateUserProfile]
@id varchar(20),
@password varchar(30),
@country char(2),
@stateName varchar(15),
@contact varchar(20),
@email varchar(50),
@residentNum varchar(20)
as
set nocount on
declare @idCount tinyint
select @idCount = count(*) from youxiuser.dbo.usertbl where account = @id and passwd = @password and resident_num =  @residentNum
if @idCount = 1 
begin
	update youxiuser.dbo.usertbl set address1 = @country, address2 = @stateName, email = @email, mobile = @contact where account = @id and passwd = @password and resident_num =  @residentNum
	select 0 as msg
	return 
end
else
begin
	select 1 as msg
	return 
end


GO
/****** Object:  StoredProcedure [dbo].[spUsedCard]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


/****** ??: ?? ???? dbo.spSerialRegi    ???? ??: 2002-03-19 ?? 5:30:44 ******/
CREATE PROC [dbo].[spUsedCard]
	@ID varchar(20),
	@ACCOUNT varchar(10),
	@PASSWD varchar(30)
AS
SET NOCOUNT ON
-- DECLARE
DECLARE @UID int
SELECT @UID=UID FROM USERTBL where ACCOUNT = @ACCOUNT AND PASSWD = @PASSWD
IF @UID is NULL
BEGIN
	RETURN 
END
ELSE
BEGIN
	RETURN
END
RETURN



GO
/****** Object:  StoredProcedure [dbo].[spUserAuth]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO


CREATE PROCEDURE [dbo].[spUserAuth]
	@ID varchar(20),
	@PASSWD varchar(30)
AS
SET NOCOUNT ON
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID AND passwd = @PASSWD
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, N'??? ??? ???? ??? ??? ??' AS comment
	RETURN 1 -- ??? ??? ???? ??? ??? ??
	
END
ELSE IF @UID <= 0
BEGIN
	SELECT 2 AS errcode, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
-- ?? ??? ??
SELECT 0 AS errcode, N'?????' AS comment
RETURN 0



GO
/****** Object:  StoredProcedure [dbo].[spUserAuthNS]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spUserAuthNS]
	@ID		varchar(20),
	@PASSWD	varchar(30) = NULL
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
DECLARE @ERROR int
DECLARE @CNT_USER int
IF @PASSWD IS NOT NULL
BEGIN
	SELECT @CNT_USER = COUNT(*) FROM usertbl
	WHERE account = @ID AND passwd = @PASSWD
END
ELSE
BEGIN
	SELECT @CNT_USER = COUNT(*) FROM usertbl
	WHERE account = @ID
END
IF @CNT_USER <> 1
BEGIN
	RETURN 1 -- ??? ?? ??
END
EXEC spUpdateLastloginID @ID
RETURN 0 -- ??? ?? ??



GO
/****** Object:  StoredProcedure [dbo].[spUserAuthNSUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[spUserAuthNSUID]
	@ID		varchar(20),
	@PASSWD	varchar(30) = NULL,
	@UID		int OUTPUT
AS
SET NOCOUNT ON
SET TRANSACTION ISOLATION LEVEL SERIALIZABLE
DECLARE @ERROR int
DECLARE @CNT_USER int
IF @PASSWD IS NOT NULL
BEGIN
	SELECT @CNT_USER = COUNT(*) FROM usertbl
	WHERE account = @ID AND passwd = @PASSWD
END
ELSE
BEGIN
	SELECT @CNT_USER = COUNT(*) FROM usertbl
	WHERE account = @ID
END
IF @CNT_USER <> 1
BEGIN
	SELECT @UID = 0
	RETURN 1 -- ??? ?? ??
END
SELECT @UID = uid FROM usertbl
WHERE account = @ID
EXEC spUpdateLastloginUID @UID
RETURN 0 -- ??? ?? ??



GO
/****** Object:  StoredProcedure [dbo].[spUserAuthUID]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[spUserAuthUID]
	@ID varchar(20),
	@PASSWD varchar(30)
AS
SET NOCOUNT ON
-- ?? ?? ? UID? ??
DECLARE @UID int
SELECT @UID = uid FROM usertbl WHERE account = @ID AND passwd = @PASSWD
IF @UID IS NULL
BEGIN
	SELECT 1 AS errcode, @UID AS uid, N'??? ??? ???? ??? ??? ??' AS comment
	RETURN 1 -- ??? ??? ???? ??? ??? ??
	
END
ELSE IF @UID = 0
BEGIN
	SELECT 2 AS errcode, @UID AS uid, N'UID? ??' AS comment
	RETURN 2 -- UID? ??
END
-- ?? ??? ??
EXEC spUpdateLastloginUID @UID
SELECT 0 AS errcode, @UID AS uid, N'?????' AS comment
RETURN 0



GO
/****** Object:  StoredProcedure [dbo].[UpdatePremiumTime]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE PROC [dbo].[UpdatePremiumTime] @UID int, @TimeFlag int
AS
SET NOCOUNT ON

declare @newtime smalldatetime;
declare @prmtime smalldatetime;
declare @time int;

SET @newtime = GETDATE();
SELECT @prmtime = premiumtime FROM UserPremiumTime WHERE uid = @UID

set @time = DATEDIFF(minute, @newtime, @prmtime)
-- ??? 0?? ??? 1? ????.
IF(@time <= 0)
BEGIN
	set @time = 0
END

UPDATE UserPremiumTime
SET cumtime = @time
WHERE uid = @UID

RETURN 0


GO
/****** Object:  StoredProcedure [dbo].[UpdateTime]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO

-- login ?? @TimeFlag? 0, ?????? 1??.
CREATE PROC [dbo].[UpdateTime] @UID int, @TimeFlag int
AS
SET NOCOUNT ON
declare @newtime smalldatetime;
declare @dbtime smalldatetime;
declare @time int;
declare @flag int;
declare @cumtime int;
SELECT @flag = flag FROM UserTime WHERE uid = @UID
IF(@flag = -1)
return 0;
IF(@TimeFlag = 0)	-- ??? ??. login-logout ? ?? cumtime ?? ???.
BEGIN
SET @newtime = GETDATE();
SELECT @dbtime = lasttime, @cumtime = cumtime FROM UserTime WHERE uid = @UID
--IF(@flag = 1)
--	return 0
set @time = DATEDIFF(minute, @dbtime, @newtime)
set @cumtime = @cumtime - @time
-- ??? 0?? ??? 1? ????.
IF(@cumtime <= 0)
BEGIN
set @cumtime = 1
END
UPDATE UserTime
SET logintime = @newtime, lasttime = @newtime, cumtime = @cumtime, flag = 1
WHERE uid = @UID
END
IF(@TimeFlag = 1)	-- ????? ???.
BEGIN
SET @newtime = GETDATE();
SELECT @dbtime = lasttime, @cumtime = cumtime FROM UserTime WHERE uid = @UID
set @time = DATEDIFF(minute, @dbtime, @newtime)
set @cumtime = @cumtime + @time
IF(@cumtime > 300)
BEGIN
  set @cumtime = 300;
END
UPDATE UserTime
SET lasttime = @newtime, cumtime = @cumtime, flag = 0
WHERE uid = @UID
END
IF(@TimeFlag = 2)	-- ????? ??. ???? ???? ??? ???.
BEGIN
SET @newtime = GETDATE();
SELECT @dbtime = lasttime, @cumtime = cumtime FROM UserTime WHERE uid = @UID
set @time = DATEDIFF(minute, @dbtime, @newtime)
set @cumtime = @cumtime + @time
IF(@cumtime > 300)
BEGIN
  set @cumtime = 300;
END
UPDATE UserTime
SET lasttime = @newtime, cumtime = @cumtime
WHERE uid = @UID
END
RETURN 0


GO
/****** Object:  Table [dbo].[admin]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[admin](
	[uid] [int] NOT NULL,
 CONSTRAINT [PK_admin] PRIMARY KEY CLUSTERED 
(
	[uid] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[convert_log]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[convert_log](
	[uid] [int] NULL,
	[minutes] [int] NULL,
	[rcoin] [int] NULL,
	[date] [smalldatetime] NULL
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[historypoint]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[historypoint](
	[id] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[uid] [int] NULL,
	[point] [int] NULL,
	[method] [int] NULL,
	[time] [smalldatetime] NULL,
	[description] [varchar](100) NULL,
 CONSTRAINT [PK_historypoint] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[historytopup]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[historytopup](
	[id] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[NameAdmin] [varchar](50) NULL,
	[NameChar] [varchar](50) NULL,
	[Point] [int] NULL,
	[Time] [smalldatetime] NULL,
 CONSTRAINT [PK_historytopup] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RYLcomments]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RYLcomments](
	[Id] [decimal](10, 0) IDENTITY(1,1) NOT NULL,
	[Msg_Id] [decimal](10, 0) NULL,
	[IP] [varchar](25) NULL,
	[Author] [varchar](15) NULL,
	[Title] [varchar](50) NULL,
	[Comment] [text] NULL,
	[Date] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RYLitem]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RYLitem](
	[Id] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[ItemName] [varchar](50) NOT NULL,
	[ItemProtoTypeId] [int] NOT NULL,
	[Amount] [int] NOT NULL,
	[Price] [int] NOT NULL,
	[Description] [text] NULL,
	[Images] [varchar](50) NULL,
	[StatLimit] [varchar](50) NULL,
	[ClassLimit] [varchar](50) NULL,
	[Category] [int] NULL,
	[SubCat] [int] NULL,
	[SubCat2] [int] NULL,
	[SubCat3] [int] NULL,
 CONSTRAINT [PK_RYLitem] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RYLitemCat]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RYLitemCat](
	[id] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[Name] [varchar](50) NOT NULL,
 CONSTRAINT [PK_RYLitemCat] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RYLitemSubCat]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RYLitemSubCat](
	[id] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[idCat] [int] NOT NULL,
	[Name] [varchar](50) NOT NULL,
 CONSTRAINT [PK_RYLitemSubCat] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RYLitemSubCat2]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RYLitemSubCat2](
	[id] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[idSubCat] [int] NULL,
	[Name] [varchar](50) NULL,
 CONSTRAINT [PK_RYLitemSubCat2] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RYLitemSubCat3]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RYLitemSubCat3](
	[id] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[idSubCat2] [int] NULL,
	[Name] [varchar](50) NULL,
 CONSTRAINT [PK_RYLitemSubCat3] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RYLnews]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RYLnews](
	[Id] [decimal](10, 0) IDENTITY(1,1) NOT NULL,
	[Title] [varchar](30) NULL,
	[Text] [text] NULL,
	[Text2] [text] NULL,
	[Author] [varchar](15) NULL,
	[Comments] [decimal](10, 0) NULL,
	[Date] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RYLrefcode]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RYLrefcode](
	[uid] [int] NOT NULL,
	[refcode] [varchar](50) NOT NULL,
 CONSTRAINT [PK_RYLrefcode] PRIMARY KEY CLUSTERED 
(
	[uid] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RYLrefcodeLog]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RYLrefcodeLog](
	[uid] [int] NOT NULL,
	[refcodeget] [varchar](50) NOT NULL,
	[ips] [varchar](50) NOT NULL,
 CONSTRAINT [PK_RYLrefcodeLog] PRIMARY KEY CLUSTERED 
(
	[uid] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[RYLscreenshot]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[RYLscreenshot](
	[Id] [decimal](10, 0) IDENTITY(1,1) NOT NULL,
	[Title] [varchar](30) NULL,
	[Descs] [text] NULL,
	[Image] [varchar](50) NULL,
	[Thumb] [varchar](50) NULL,
	[Author] [varchar](15) NULL,
	[Comments] [decimal](10, 0) NULL,
	[Date] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[test]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[test](
	[uid] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[account] [varchar](20) NULL,
	[point] [int] NULL,
 CONSTRAINT [PK_test] PRIMARY KEY CLUSTERED 
(
	[uid] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[TrialAccount]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[TrialAccount](
	[Runner] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[TrialID] [char](10) NOT NULL,
	[TrialPassword] [char](8) NOT NULL,
	[Activate] [bit] NOT NULL,
	[TrialDays] [tinyint] NOT NULL,
	[ValidID] [bit] NOT NULL,
	[DateActivate] [datetime] NULL,
	[DateCreate] [datetime] NOT NULL,
 CONSTRAINT [PK_TrialAccount] PRIMARY KEY CLUSTERED 
(
	[Runner] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[UserMsgOut]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[UserMsgOut](
	[id] [int] IDENTITY(1,1) NOT NULL,
	[uid] [int] NOT NULL,
	[phone] [varchar](50) NULL,
	[detail] [varchar](max) NULL,
	[promo] [varchar](50) NULL,
	[date] [smalldatetime] NULL,
	[country] [varchar](50) NULL,
 CONSTRAINT [PK_UserMsgOut] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[userpayment]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[userpayment](
	[Id] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[Uid] [int] NULL,
	[ItemNumber] [varchar](255) NULL,
	[TxnId] [varchar](255) NULL,
	[PaymentGross] [float] NULL,
	[Currency] [varchar](5) NULL,
	[PaymentStatus] [varchar](255) NULL,
	[topupKey] [varchar](50) NULL,
	[time] [smalldatetime] NULL,
 CONSTRAINT [PK_userpayment] PRIMARY KEY CLUSTERED 
(
	[Id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[UserPlayHours]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UserPlayHours](
	[id] [int] IDENTITY(1,1) NOT NULL,
	[uid] [int] NOT NULL,
	[PlayHours] [int] NOT NULL,
 CONSTRAINT [PK_UserPlayHours] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[UserPlayMin]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UserPlayMin](
	[id] [int] IDENTITY(1,1) NOT NULL,
	[uid] [int] NULL,
	[playmin] [int] NULL,
 CONSTRAINT [PK_UserPlayMin] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[userpoint]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[userpoint](
	[uid] [int] NOT NULL,
	[point] [int] NOT NULL CONSTRAINT [DF_userpoint_point]  DEFAULT ((0)),
 CONSTRAINT [PK_userpoint] PRIMARY KEY CLUSTERED 
(
	[uid] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[UserPremiumTime]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UserPremiumTime](
	[uid] [int] NOT NULL,
	[type] [int] NOT NULL,
	[premiumtime] [smalldatetime] NOT NULL,
	[cumtime] [int] NULL
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[UserPremiumTimeLog]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UserPremiumTimeLog](
	[uid] [int] NOT NULL,
	[Input] [smalldatetime] NULL
) ON [PRIMARY]

GO
/****** Object:  Table [dbo].[UserPromotion]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[UserPromotion](
	[id] [int] IDENTITY(1,1) NOT NULL,
	[uid] [int] NULL,
	[phone] [varchar](50) NULL,
	[country] [varchar](50) NULL,
	[promo] [varchar](50) NULL,
	[date] [smalldatetime] NULL,
 CONSTRAINT [PK_UserPromotion] PRIMARY KEY CLUSTERED 
(
	[id] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[usertbl]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
CREATE TABLE [dbo].[usertbl](
	[uid] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[account] [varchar](20) NOT NULL,
	[passwd] [varchar](30) NOT NULL,
	[writer] [varchar](20) NULL,
	[sex] [char](2) NULL,
	[birth] [char](11) NULL,
	[zip_code] [varchar](20) NULL,
	[address1] [varchar](80) NULL,
	[address2] [varchar](80) NULL,
	[mobile] [varchar](20) NULL,
	[phone] [varchar](20) NULL,
	[email] [varchar](50) NULL,
	[job] [varchar](20) NULL,
	[resident_num] [varchar](20) NULL,
	[timechk] [varchar](30) NULL,
	[jointime] [smalldatetime] NOT NULL CONSTRAINT [DF_usertbl_jointime]  DEFAULT (getdate()),
	[lastlogin] [smalldatetime] NOT NULL CONSTRAINT [DF_usertbl_lastlogin]  DEFAULT (getdate()),
	[Point] [varchar](max) NULL CONSTRAINT [DF_usertbl_Points]  DEFAULT ((0)),
	[OnlineTime] [varchar](max) NULL CONSTRAINT [DF_usertbl_OnlineTime]  DEFAULT ((0)),
 CONSTRAINT [PK_usertbl] PRIMARY KEY CLUSTERED 
(
	[uid] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[UserTime]    Script Date: 4/23/2024 9:36:00 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE TABLE [dbo].[UserTime](
	[uid] [int] NOT NULL,
	[logintime] [smalldatetime] NOT NULL,
	[lasttime] [smalldatetime] NOT NULL,
	[cumtime] [int] NOT NULL,
	[flag] [int] NOT NULL
) ON [PRIMARY]

GO
SET IDENTITY_INSERT [dbo].[historypoint] ON 

GO
INSERT [dbo].[historypoint] ([id], [uid], [point], [method], [time], [description]) VALUES (1, 1, 1000, 2, CAST(N'2018-07-19 21:38:00' AS SmallDateTime), N'Buy point 1000 via Paypal')
GO
INSERT [dbo].[historypoint] ([id], [uid], [point], [method], [time], [description]) VALUES (2, 1, 12000, 2, CAST(N'2018-07-19 21:45:00' AS SmallDateTime), N'Buy point 12000 via Paypal')
GO
INSERT [dbo].[historypoint] ([id], [uid], [point], [method], [time], [description]) VALUES (3, 4, 1000, 2, CAST(N'2018-07-19 21:52:00' AS SmallDateTime), N'Buy point 1000 via Paypal')
GO
INSERT [dbo].[historypoint] ([id], [uid], [point], [method], [time], [description]) VALUES (4, 4, 500, 1, CAST(N'2018-07-19 21:52:00' AS SmallDateTime), N'Buy item Medal Box 5K (5.000) in Item Mall')
GO
INSERT [dbo].[historypoint] ([id], [uid], [point], [method], [time], [description]) VALUES (5, 1, 30000, 2, CAST(N'2018-07-20 14:53:00' AS SmallDateTime), N'Buy point 30000 via Paypal')
GO
SET IDENTITY_INSERT [dbo].[historypoint] OFF
GO
SET IDENTITY_INSERT [dbo].[RYLitem] ON 

GO
INSERT [dbo].[RYLitem] ([Id], [ItemName], [ItemProtoTypeId], [Amount], [Price], [Description], [Images], [StatLimit], [ClassLimit], [Category], [SubCat], [SubCat2], [SubCat3]) VALUES (3, N'Medal Box 5K (5.000)', 15005, 1, 500, N'A box containing medals', N'L-gems.gif', N'NONE', N'NONE', 2, 0, 0, 0)
GO
INSERT [dbo].[RYLitem] ([Id], [ItemName], [ItemProtoTypeId], [Amount], [Price], [Description], [Images], [StatLimit], [ClassLimit], [Category], [SubCat], [SubCat2], [SubCat3]) VALUES (4, N'Medal Box 10K (10.000)', 15001, 1, 1000, N'A box containing medals 10.000', N'L-gems.gif', N'NONE', N'NONE', 2, 0, 0, 0)
GO
INSERT [dbo].[RYLitem] ([Id], [ItemName], [ItemProtoTypeId], [Amount], [Price], [Description], [Images], [StatLimit], [ClassLimit], [Category], [SubCat], [SubCat2], [SubCat3]) VALUES (5, N'Medal Box 50K (50.000)', 15002, 1, 5000, N'A box containing medals 50.000', N'L-gems.gif', N'NONE', N'NONE', 2, 0, 0, 0)
GO
SET IDENTITY_INSERT [dbo].[RYLitem] OFF
GO
SET IDENTITY_INSERT [dbo].[RYLitemCat] ON 

GO
INSERT [dbo].[RYLitemCat] ([id], [Name]) VALUES (2, N'Medals')
GO
SET IDENTITY_INSERT [dbo].[RYLitemCat] OFF
GO
SET IDENTITY_INSERT [dbo].[RYLitemSubCat] ON 

GO
INSERT [dbo].[RYLitemSubCat] ([id], [idCat], [Name]) VALUES (1, 1, N'Almighty Potion')
GO
SET IDENTITY_INSERT [dbo].[RYLitemSubCat] OFF
GO
SET IDENTITY_INSERT [dbo].[userpayment] ON 

GO
INSERT [dbo].[userpayment] ([Id], [Uid], [ItemNumber], [TxnId], [PaymentGross], [Currency], [PaymentStatus], [topupKey], [time]) VALUES (1, 1, N'1', N'7AV50518KF024692D', 10, N'USD', N'Completed', N'hDC8K', CAST(N'2018-07-19 21:38:00' AS SmallDateTime))
GO
INSERT [dbo].[userpayment] ([Id], [Uid], [ItemNumber], [TxnId], [PaymentGross], [Currency], [PaymentStatus], [topupKey], [time]) VALUES (2, 1, N'4', N'57986064KK5861605', 100, N'USD', N'Completed', N'3RVBJ', CAST(N'2018-07-19 21:45:00' AS SmallDateTime))
GO
INSERT [dbo].[userpayment] ([Id], [Uid], [ItemNumber], [TxnId], [PaymentGross], [Currency], [PaymentStatus], [topupKey], [time]) VALUES (3, 4, N'1', N'48203228P77864044', 10, N'USD', N'Completed', N'cUhbn', CAST(N'2018-07-19 21:52:00' AS SmallDateTime))
GO
INSERT [dbo].[userpayment] ([Id], [Uid], [ItemNumber], [TxnId], [PaymentGross], [Currency], [PaymentStatus], [topupKey], [time]) VALUES (4, 1, N'1', N'77832679LA6606611', 12, N'USD', N'Completed', N'FslsW', CAST(N'2018-07-20 14:53:00' AS SmallDateTime))
GO
SET IDENTITY_INSERT [dbo].[userpayment] OFF
GO
INSERT [dbo].[userpoint] ([uid], [point]) VALUES (1, 30000)
GO
INSERT [dbo].[userpoint] ([uid], [point]) VALUES (4, 0)
GO
INSERT [dbo].[userpoint] ([uid], [point]) VALUES (5, 0)
GO
SET IDENTITY_INSERT [dbo].[usertbl] ON 

GO
INSERT [dbo].[usertbl] ([uid], [account], [passwd], [writer], [sex], [birth], [zip_code], [address1], [address2], [mobile], [phone], [email], [job], [resident_num], [timechk], [jointime], [lastlogin], [Point], [OnlineTime]) VALUES (1, N'admin', N'a21', N'rwarrwe', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, CAST(N'2018-06-29 16:11:00' AS SmallDateTime), CAST(N'2024-04-23 05:54:00' AS SmallDateTime
GO
INSERT [dbo].[usertbl] ([uid], [account], [passwd], [writer], [sex], [birth], [zip_code], [address1], [address2], [mobile], [phone], [email], [job], [resident_num], [timechk], [jointime], [lastlogin], [Point], [OnlineTime]) VALUES (2, N'admin2', N'a21', N'rwarrwe', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, CAST(N'2018-06-30 17:51:00' AS SmallDateTime), CAST(N'2024-04-23 06:01:00' AS SmallDateTime
GO
INSERT [dbo].[usertbl] ([uid], [account], [passwd], [writer], [sex], [birth], [zip_code], [address1], [address2], [mobile], [phone], [email], [job], [resident_num], [timechk], [jointime], [lastlogin], [Point], [OnlineTime]) VALUES (3, N'admin3', N'a21', N'rwarrwe', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, CAST(N'2018-07-02 00:50:00' AS SmallDateTime), CAST(N'2024-04-23 06:02:00' AS SmallDateTime
GO
INSERT [dbo].[usertbl] ([uid], [account], [passwd], [writer], [sex], [birth], [zip_code], [address1], [address2], [mobile], [phone], [email], [job], [resident_num], [timechk], [jointime], [lastlogin], [Point], [OnlineTime]) VALUES (4, N'admin4', N'a21', N'hazegan', N'0 ', N'dota       ', NULL, NULL, NULL, N'hazegan', NULL, N'hazegandota@gmail.com', NULL, NULL, NULL, CAST(N'2018-07-19 18:09:00' AS SmallDateTime), CAST(N'2024-04-23 06:03:00' AS SmallDateTime
GO
INSERT [dbo].[usertbl] ([uid], [account], [passwd], [writer], [sex], [birth], [zip_code], [address1], [address2], [mobile], [phone], [email], [job], [resident_num], [timechk], [jointime], [lastlogin], [Point], [OnlineTime]) VALUES (5, N'admin5', N'a21', N'alex', N'0 ', N'limm       ', NULL, NULL, NULL, N'gamemaster', NULL, N'asldads@gmail.com', NULL, NULL, NULL, CAST(N'2018-07-19 20:36:00' AS SmallDateTime), CAST(N'2024-04-23 06:05:00' AS SmallDateTime
GO
INSERT [dbo].[usertbl] ([uid], [account], [passwd], [writer], [sex], [birth], [zip_code], [address1], [address2], [mobile], [phone], [email], [job], [resident_num], [timechk], [jointime], [lastlogin], [Point], [OnlineTime]) VALUES (7, N'lakuli', N'151011ez', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, N'eykalpirates@gmail.com', NULL, NULL, NULL, CAST(N'2024-03-06 06:53:00' AS SmallDateTime), CAST(N'2024-03-06 06:53:00' AS SmallDateTime), N'0', N'0')
GO
INSERT [dbo].[usertbl] ([uid], [account], [passwd], [writer], [sex], [birth], [zip_code], [address1], [address2], [mobile], [phone], [email], [job], [resident_num], [timechk], [jointime], [lastlogin], [Point], [OnlineTime]) VALUES (1012, N'test', N'test', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, CAST(N'2024-03-24 22:21:00' AS SmallDateTime), CAST(N'2024-04-23 06:08:00' AS SmallDateTime
GO
INSERT [dbo].[usertbl] ([uid], [account], [passwd], [writer], [sex], [birth], [zip_code], [address1], [address2], [mobile], [phone], [email], [job], [resident_num], [timechk], [jointime], [lastlogin], [Point], [OnlineTime]) VALUES (1013, N'test2', N'test2', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, CAST(N'2024-03-24 22:21:00' AS SmallDateTime), CAST(N'2024-04-23 06:09:00' AS SmallDateTime
GO
INSERT [dbo].[usertbl] ([uid], [account], [passwd], [writer], [sex], [birth], [zip_code], [address1], [address2], [mobile], [phone], [email], [job], [resident_num], [timechk], [jointime], [lastlogin], [Point], [OnlineTime]) VALUES (1014, N'test3', N'test3', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, CAST(N'2024-03-24 22:21:00' AS SmallDateTime), CAST(N'2024-04-23 06:10:00' AS SmallDateTime), N'0', N'0')
GO
INSERT [dbo].[usertbl] ([uid], [account], [passwd], [writer], [sex], [birth], [zip_code], [address1], [address2], [mobile], [phone], [email], [job], [resident_num], [timechk], [jointime], [lastlogin], [Point], [OnlineTime]) VALUES (1015, N'test4', N'test4', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, CAST(N'2024-03-24 22:22:00' AS SmallDateTime), CAST(N'2024-04-23 06:11:00' AS SmallDateTime
GO
INSERT [dbo].[usertbl] ([uid], [account], [passwd], [writer], [sex], [birth], [zip_code], [address1], [address2], [mobile], [phone], [email], [job], [resident_num], [timechk], [jointime], [lastlogin], [Point], [OnlineTime]) VALUES (1016, N'test5', N'test5', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, CAST(N'2024-03-24 22:22:00' AS SmallDateTime), CAST(N'2024-04-23 06:14:00' AS SmallDateTime
GO
INSERT [dbo].[usertbl] ([uid], [account], [passwd], [writer], [sex], [birth], [zip_code], [address1], [address2], [mobile], [phone], [email], [job], [resident_num], [timechk], [jointime], [lastlogin], [Point], [OnlineTime]) VALUES (1017, N'test6', N'test6', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, N'test6@yahoo.com', NULL, NULL, NULL, CAST(N'2024-03-26 07:06:00' AS SmallDateTime), CAST(N'2024-03-28 21:56:00' AS SmallDateTime), N'0', N'0')
GO
INSERT [dbo].[usertbl] ([uid], [account], [passwd], [writer], [sex], [birth], [zip_code], [address1], [address2], [mobile], [phone], [email], [job], [resident_num], [timechk], [jointime], [lastlogin], [Point], [OnlineTime]) VALUES (1018, N'wakka31', N'rikimaru13', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, N'asdasda@gmail.com', NULL, NULL, NULL, CAST(N'2024-04-23 20:51:00' AS SmallDateTime), CAST(N'2024-04-23 20:51:00' AS SmallDateTime), N'0', N'0')
GO
SET IDENTITY_INSERT [dbo].[usertbl] OFF
GO
SET ANSI_PADDING ON

GO
/****** Object:  Index [UK_usertbl]    Script Date: 4/23/2024 9:36:00 PM ******/
ALTER TABLE [dbo].[usertbl] ADD  CONSTRAINT [UK_usertbl] UNIQUE NONCLUSTERED 
(
	[account] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
ALTER TABLE [dbo].[RYLnews] ADD  DEFAULT ((0)) FOR [Comments]
GO
ALTER TABLE [dbo].[RYLscreenshot] ADD  DEFAULT ((0)) FOR [Comments]
GO
ALTER TABLE [dbo].[test] ADD  CONSTRAINT [DF_test_point]  DEFAULT ((150)) FOR [point]
GO
ALTER TABLE [dbo].[TrialAccount] ADD  CONSTRAINT [DF_TrialAccount_Activate]  DEFAULT ((0)) FOR [Activate]
GO
ALTER TABLE [dbo].[TrialAccount] ADD  CONSTRAINT [DF_TrialAccount_TrialDays]  DEFAULT ((14)) FOR [TrialDays]
GO
ALTER TABLE [dbo].[TrialAccount] ADD  CONSTRAINT [DF_TrialAccount_ValidID]  DEFAULT ((0)) FOR [ValidID]
GO
USE [master]
GO
ALTER DATABASE [youxiuser] SET  READ_WRITE 
GO
