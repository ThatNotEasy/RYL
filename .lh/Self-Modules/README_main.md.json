{
    "sourceFile": "Self-Modules/README_main.md",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1759246576435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1759246576435,
            "name": "Commit-0",
            "content": "# Self-Modules Main CLI\r\n\r\nThis is the main command-line interface that integrates all the Self-Modules functionality.\r\n\r\n## Features\r\n\r\n- **File Processing**: Convert TXT files to CSV format (RYL2 itemscript and generic)\r\n- **Database Operations**: Test connections, show tables, migrate data, create tables, restore databases\r\n- **Modular Design**: Each module can be used independently or through the main CLI\r\n\r\n## Usage\r\n\r\n```bash\r\npython main.py <command> [options]\r\n```\r\n\r\n## Available Commands\r\n\r\n### File Processing Commands\r\n\r\n#### `txt-to-csv`\r\nConvert TXT files to CSV format using the txt_into_csv module.\r\n\r\n```bash\r\npython main.py txt-to-csv --input INPUT --output OUTPUT\r\n```\r\n\r\n#### `format-itemscript`\r\nFormat and convert RYL2 itemscript files to CSV.\r\n\r\n```bash\r\npython main.py format-itemscript --input-folder INPUT --output-folder OUTPUT\r\n```\r\n\r\n#### `convert-txt`\r\nConvert generic TXT files to CSV (uses default INPUT/OUTPUT folders).\r\n\r\n```bash\r\npython main.py convert-txt --input-folder INPUT --output-folder OUTPUT\r\n```\r\n\r\n### Database Commands\r\n\r\n#### `test-connection`\r\nTest database connections.\r\n\r\n```bash\r\npython main.py test-connection\r\n```\r\n\r\n#### `show-tables`\r\nShow all database tables and columns.\r\n\r\n```bash\r\npython main.py show-tables --database mydb\r\n```\r\n\r\n#### `migrate-data`\r\nMigrate data from SQL Server to MySQL.\r\n\r\n```bash\r\npython main.py migrate-data\r\n```\r\n\r\n#### `create-tables`\r\nCreate database tables from SQL Server schema.\r\n\r\n```bash\r\npython main.py create-tables\r\n```\r\n\r\n#### `restore-db`\r\nRestore database from backup file.\r\n\r\n```bash\r\npython main.py restore-db --backup-file backup.bak --server localhost --database master\r\n```\r\n\r\n## Installation\r\n\r\n### Required Dependencies\r\n\r\nFor basic file processing (no database features):\r\n- Python 3.6+\r\n- No additional packages required\r\n\r\nFor database features, install the following:\r\n\r\n```bash\r\npip install mysql-connector-python\r\npip install pyodbc\r\npip install colorama\r\n```\r\n\r\n### Configuration\r\n\r\n1. Copy `config.ini.example` to `config.ini`\r\n2. Update the database connection settings in `config.ini`:\r\n\r\n```ini\r\n[MYSQL]\r\nHOSTNAME = localhost\r\nUSERNAME = root\r\nPASSWORD = your_mysql_password\r\nPORT = 3306\r\nPLUGIN = mysql_native_password\r\n\r\n[SQLSERVER]\r\nDATABASE = master\r\nHOSTNAME = localhost\r\nUSERNAME = sa\r\nPASSWORD = your_sqlserver_password\r\nPORT = 1433\r\nVERSION = 11.0\r\nSSL = no\r\n```\r\n\r\n## Module Architecture\r\n\r\nThe main.py integrates the following modules:\r\n\r\n- `format_itemscript.py` - RYL2 itemscript file processing\r\n- `txt_into_csv.py` - Generic TXT to CSV conversion\r\n- `mysql.py` - MySQL database operations\r\n- `sqlserver.py` - SQL Server database operations\r\n- `restore_database.py` - Database backup and restore\r\n- `auto_create_db_table_column.py` - Automatic table creation\r\n- `show_all_db_table_column.py` - Database schema inspection\r\n- `tengah_cuba_insert_semua.py` - Data migration tools\r\n- `test_connection.py` - Connection testing utilities\r\n\r\n## Error Handling\r\n\r\nThe CLI gracefully handles missing dependencies:\r\n- Database commands will show clear error messages if dependencies are missing\r\n- File processing commands work without any database dependencies\r\n- Detailed logging is provided in `self_modules.log`\r\n\r\n## Examples\r\n\r\n### Basic File Processing\r\n\r\n```bash\r\n# Convert RYL2 itemscript files\r\npython main.py format-itemscript --input-folder ./input --output-folder ./output\r\n\r\n# Convert generic TXT files\r\npython main.py txt-to-csv --input ./txt_files --output ./csv_output\r\n```\r\n\r\n### Database Operations (with dependencies installed)\r\n\r\n```bash\r\n# Test database connections\r\npython main.py test-connection\r\n\r\n# Show all tables in a database\r\npython main.py show-tables --database mydatabase\r\n\r\n# Migrate data between databases\r\npython main.py migrate-data\r\n\r\n# Create tables from SQL Server schema\r\npython main.py create-tables\r\n```\r\n\r\n## Logging\r\n\r\nAll operations are logged to `self_modules.log` with detailed information about:\r\n- Command execution\r\n- File processing results\r\n- Database operations\r\n- Error messages and warnings\r\n\r\n## Exit Codes\r\n\r\n- `0`: Success\r\n- `1`: Error (check logs for details)"
        }
    ]
}